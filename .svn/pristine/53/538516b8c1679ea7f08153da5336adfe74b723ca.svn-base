╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Program_Flow_Demistified.txt                                                                                                                                            ║
║                                                                                                                                                                         ║
║ Document Best Viewed/Printed: Page{Ledger, Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.15518.xx (04 Jun 18) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added header, added reference data                                                                                                      ║
║  1.00.15618.xx (05 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional data for parent signal handling                                                                                        ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Reference                                                                                ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   VCS21 Source Code Repository                                                                                                                                          ║
║   ----------------------------                                                                                                                                          ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/                                                                                                                 ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                  Notes                                                                                  ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   All signal numbers for both standard signals and real time signals are defined in: /usr/include/bits/signum.h                                                         ║
║                                                                                                                                                                         ║
║   Standard signal numbers are the same for x86 and arm architectures                                                                                                    ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   Registered Signal Handlers                                                                                                                                            ║
║   --------------------------                                                                                                                                            ║
║      The parent process registers SIGCHLD                                                                                                                               ║
║                                                                                                                                                                         ║
║      The dispatcher child process registers multiple standard signal handlers and no real time signal handlers                                                          ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                          Code Path For Initializing Signal Handlers On Program Start                                                    ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   The code path below shows the functions (and the files they are in) that are accessed by both the dispatcher child process and the main program process during startup


 main << in launcher.cpp: Program Entry Point >>
 ──┬─
   │
   │
   └── program << in xxx.cpp (cwp, riu, rmg, tmg) >>
       ──┬────
         ╎
         ╎
         ├── ForkProcess << in dispatcher.cpp: Parent Returns, Child Does Not >>
         ╎   ──┬────────
         ╎     ╎
         ╎     ╎
         ╎     └── DispatcherProgram << in dispatcher.cpp: Code Down This Branch Is ONLY Executed By The Child >>
         ╎         ──┬──────────────
         ╎           ╎
         ╎           ╎
         ╎           ├── RegisterSignalHandlers << in dispatcher.cpp >>
         ╎           ╎   ──┬───────────────────
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGSEGV, FaultSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGILL, FaultSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGFPE, FaultSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGSYS, TermSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGINT, TermSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGTSTP, TermSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     ├── sigaction << SIGTERM, TermSignalHandler >>
         ╎           ╎     ╎
         ╎           ╎     ╎
         ╎           ╎     └── sigaction << SIGCHLD, ChildSignalHandler >>
         ╎           ╎
         ╎           ╎
         ╎           └── while << Boolean Flag Controlled Infinite While Loop >>
         ╎
         ╎
         ├── OSi_Initialize << in osi.cpp: Code Down This Branch Is ONLY Executed By The Parent >>
         ╎   ──┬───────────
         ╎     ╎
         ╎     ╎
         ╎     ├── OSi_Signal_Initialize << in os_signal.cpp >>
         ╎     ╎   ──┬──────────────────
         ╎     ╎     ╎
         ╎     ╎     ╎
         ╎     ╎     ├── memset gRegisteredHandlers << Initialize All Signal Handlers To 0 >>
         ╎     ╎     ╎
         ╎     ╎     ╎
         ╎     ╎     └── InstallHandlers << in os_signal.cpp >>
         ╎     ╎         ──┬────────────
         ╎     ╎           ╎
         ╎     ╎           ╎
         ╎     ╎           ├── sigaction << SIGRTMIN to SIGRTMAX {Usually 32 to 64}, DummyHandler >>
         ╎     ╎           ╎
         ╎     ╎           ╎
         ╎     ╎           ├── sigaction << OS_SIGNAL_BACKTRACE {Usually 60}, BackTraceSginalHandler >>
         ╎     ╎           ╎
         ╎     ╎           ╎
         ╎     ╎           └── SignalHandlerThread << in os_signal.cpp: Thread Spawned Off To Act As The Signal Handler >>
         ╎     ╎               ──┬────────────────
         ╎     ╎                 ╎
         ╎     ╎                 ╎
         ╎     ╎                 └── while << Boolean Flag Controlled Infinite While Loop >>
         ╎     ╎                     ──┬──
         ╎     ╎                       ╎
         ╎     ╎                       ╎
         ╎     ╎                       ├── ----- if ----- << Signal Number Is Greater Than 0 >>
         ╎     ╎                       │   ──┬───────────
         ╎     ╎                             │
         ╎     ╎                             │
         ╎     ╎                             ├── ----- if ----- << Signal Has A Registered Handler >>
         ╎     ╎                             │   ──┬───────────
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   └── gRegisteredHandlers[sig_num].handler
         ╎     ╎
         ╎     ╎                             │
         ╎     ╎                             └── ----- else -----
         ╎     ╎                                 ──┬─────────────
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGINT << Ignore >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGTRAP << Ignore >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGHUP << Ignore >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGSYS << Ignore >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGWINCH << Ignore >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGCHLD << Log the reason the child process sent the signal >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   ├── SIGPROF << Ignore >>
         ╎     ╎                                   │
         ╎     ╎                                   │
         ╎     ╎                                   └── Unhandled Signal
         ╎     ╎
         ╎     ╎                       │
         ╎     ╎                       └── ----- else -----
         ╎     ╎                           ──┬─────────────
         ╎     ╎                             │
         ╎     ╎                             │
         ╎     ╎                             └── Undefined Signal, Possibly GDB sigwaitinfo
         ╎     ╎
         ╎     ╎
         ╎     └── RegisterTerminationSignalsHandler << in osi.cpp >>
         ╎         ──┬──────────────────────────────
         ╎           ╎
         ╎           ╎
         ╎           └── OSi_Signal_RegisterSignalHandler << in os_signal.cpp: SIGINT, OnExitHandler >>
         ╎
         ╎           ╎
         ╎           └── OSi_Signal_RegisterSignalHandler << in os_signal.cpp: SIGTSTP, OnExitHandler >>
         ╎
         ╎           ╎
         ╎           └── OSi_Signal_RegisterSignalHandler << in os_signal.cpp: SIGTERM, OnExitHandler >>
         ╎
         ╎
         └── OSi_Signal_RegisterSignalHandler << in os_signal.cpp: SIGCHLD, ChildSignalHandler >>
             ──┬─────────────────────────────
               ╎
               ╎
               └── gRegisteredHandlers[sig_num].handler








╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                    Code Path For Initializing Signal Handlers During Program Execution                                                  ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝


















