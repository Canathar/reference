╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ GDB_Eclipse_Configuration.txt                                                                                                   ║
║                                                                                                                                 ║
║ Document Best Viewed/Printed: Page{Letter, Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                 ║
║                                                                                                                                 ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                         Revision History                                                        ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                             ║
║                                                                                                                                 ║
║  1.00.32117.xx (17 Nov 17) - Initial Creation {J. Laccone}                                                                      ║
║                                 Added header, added reference data                                                              ║
║  1.01.32417.xx (20 Nov 17) - Development Update {J. Laccone}                                                                    ║
║                                 Debug of procedure                                                                              ║
║  1.02.06418.xx (05 Mar 18) - Development Update {J. Laccone}                                                                    ║
║                                 Debug of procedure                                                                              ║
║  1.03.15118.xx (31 May 18) - Development Update {J. Laccone}                                                                    ║
║                                 Update of configuration                                                                         ║
║                                                                                                                                 ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                            Reference                                                            ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                 ║
║   VCS21 Embedded Tools Source Code Repository                                                                                   ║
║   -------------------------------------------                                                                                   ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/ccu/base/tools/emb/                            ║
║                                                                                                                                 ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                              Notes                                                              ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                 ║
║   GDB Command Line Common Commands                                                                                              ║
║   --------------------------------                                                                                              ║
║      http://visualgdb.com/gdbreference/commands                                                                                 ║
║                                                                                                                                 ║
║      target remote <ip-address>:<port>                                                                                          ║
║         https://sourceware.org/gdb/onlinedocs/gdb/Connecting.html#Connecting                                                    ║
║                                                                                                                                 ║
║      show sysroot                                                                                                               ║
║         http://visualgdb.com/gdbreference/commands/set_sysroot                                                                  ║
║                                                                                                                                 ║
║      show solib-search-path                                                                                                     ║
║         http://visualgdb.com/gdbreference/commands/set_solib-search-path                                                        ║
║                                                                                                                                 ║
║                                                                                                                                 ║
║                                                                                                                                 ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                         Before You Begin                                                        ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

    The following libraries should be installed on the target machine before the proceeding steps.
    Execute as root.


    Reference
    ─────────
        <-- https://stackoverflow.com/questions/338317/what-is-makeinfo-and-how-do-i-get-it -->
        <-- https://wiki.python.org/moin/DebuggingWithGdb -->


    Bash Commands - Execute The Following In A Terminal Window As superuser
    ───────────────────────────────────────────────────────────────────────
        1. Open a terminal window
        2. Login as the superuser (root on CentOS/RHEL)
        3. Install the following package(s)

               yum --noplugins --enablerepo "*" --disablerepo "*media*" install texi2html texinfo yum-utils python-debug

        4. Install the following debug package(s)

               debuginfo-install glibc python


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                         Compiling GDB For ARM Targets On An x86_64 Host                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

    The following steps will install the utility. Execute as root.


    Reference
    ─────────
        <-- https://www.gnu.org/software/gdb/ -->
        <-- https://sourceware.org/gdb/wiki/BuildingCrossGDBandGDBserver -->
        <-- https://stackoverflow.com/questions/26910649/unable-to-install-gdb-with-python-support -->


    Bash Commands - Execute The Following In A Terminal Window As superuser
    ───────────────────────────────────────────────────────────────────────
        1. Open a terminal window
        2. Login as the superuser (root on CentOS/RHEL)
        3. Change to the directory for user source

               cd /usr/src

        4. Download the gdb source archive

               wget --no-check-certificate \
                    https://ftp.gnu.org/gnu/gdb/gdb-7.12.1.tar.gz

        5. Expand the archive into a new directory

               tar --no-same-owner -xzvf <gdb archive>.tar.gz

        6. Change to the new directory

               cd <dir of untared gdb archive>

        7. Configure the compile options (choose one of the following)

               Without python debugging capability
               -----------------------------------
               ./configure --target=arm-none-linux-gnueabi --with-expat=/usr/local/lib --with-gdb-datadir=/usr/local/share/gdb


               With python debugging capability
               --------------------------------
               ./configure --target=arm-none-linux-gnueabi --with-expat=/usr/local/lib --with-gdb-datadir=/usr/local/share/gdb \
                           --with-python=/usr/local/bin/python2.7 LDFLAGS="-Wl,-rpath /usr/local/lib -L/usr/local/lib"

        8. Compile the program from its sources with the new configuration

               make

        9. Install the program into an location specified in the configuration

               make install


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                  Adding Target Libraries To GDB                                                 ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝


    Bash Commands - Execute The Following In A Terminal Window
    ──────────────────────────────────────────────────────────
        1. Open a terminal window
        2. Change to the users home directory

               cd ~

        3. Create a new bash script file

               touch coredump_setup.sh

        4. Make the new bash script executable

               chmod 775 coredump_setup.sh

        5. Bring up a graphical text editor to add content to the new bash script file

               gedit coredump_setup.sh &

        6. Add the following lines to the coredump_setup.sh file:


#!/bin/bash

# Define the Subversion revision to pull the libraries
# NOTE: Change the revision number to match the binary file on the target device
REV=190738

# Run these commands in the root of the local file system
# NOTE: Change the URL to match the source location for your target core files.
#       i.e. If you are debugging a B13 core file, point to B13,
#            If you are debugging a trunk core file, point to trunk (trunk URL shown)
URL="https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/ccu/DM8168/cwp2"

rm -rf home
rm -rf lib
rm -rf usr

svn export --depth infinity -r $REV $URL/rootfs/rootfs/lib lib
svn export --depth infinity -r $REV $URL/usrfs/lib usr/lib
svn export --depth infinity -r $REV $URL/usrfs/share/harris/init/lib home/lib

# patch missing symlinks
ln -s libexpat.so.0.5.0 home/lib/libexpat.so.0
ln -s libsnmp++.so.2.0.0 home/lib/libsnmp++.so.2


      6. Save the file and exit gedit
      7. Create a directory for the coredump target file system libraries

            mkdir <coredump-target-filesystem>
            i.e. ~/workspace/coredump_targetfs

      8. Change directory to the coredump file system library directory

            cd <coredump-target-filesystem>
            i.e. ~/workspace/coredump_targetfs

      9. Create a directory for the current core file analysis

            mkdir <current-coredump-analysis-libraries>
            i.e. trunk_core_research_DE12345

     10. Change directory to the current coredump anaylysis directory

            cd <current-coredump-analysis-libraries>
            i.e. trunk_core_research_DE12345

     11. Ensure that the REV and URL in coredump_setup.sh match the target binaries
     12. Execute the coredump_setup.sh in the <current-coredump-analysis-libraries> directory

            ~/coredump_setup.sh

     13. Create a new gdb initialization file in the <current-coredump-analysis-libraries> directory

             touch .gdbinit

     14. Bring up a graphical text editor to add content to the new gdb initialization file

             gedit .gdbinit &

     15. Add the following lines to the .gdbinit file. Remember to uncomment and modify the sysroot, solib-search-path and ONE
         of the substitute-path lines depending on your configuration. If you are debugging a trunk coredump, uncomment and
         modify the trunk substitution. If you are debugging a Build 13 coredump, uncomment and modify the b13 substitution
         corresponding to your build:

         NOTE: Modify the following file locations to match your configuration
               Target library file locations            : <current-coredump-analysis-libraries>
               Location for Embedded project souce files: <trunk-prj-src-files-emb-root-dir>
                                                                       -- or --
                                                          <b13-prj-src-files-emb-root-dir>

# ---------------------------------------------------------------------------------------------------------------------------------
# --                                                  Shared Library Commands                                                    --
# ---------------------------------------------------------------------------------------------------------------------------------
# sharedlibrary      - Forces GDB to load symbols for the specified shared libraries or all loaded shared libraries.
# info sharedlibrary - Shows information about the loaded libraries, their addresses and state of the debugging symbols.


# ---------------------------------------------------------------------------------------------------------------------------------
#
# Specifies the local directory that contains copies of target libraries in the corresponding subdirectories
#
#    Examine on a running session using the following command:
#
#       show sysroot
#
# Reference: http://visualgdb.com/gdbreference/commands/set_sysroot
#
# ---------------------------------------------------------------------------------------------------------------------------------
#set sysroot <current-coredump-analysis-libraries>


# ---------------------------------------------------------------------------------------------------------------------------------
#
# Specifies directories where GDB will search for shared libraries with symbols
#
#    Examine on a running session using the following command:
#
#       show solib-search-path
#
# Reference: http://visualgdb.com/gdbreference/commands/set_solib-search-path
#
# ---------------------------------------------------------------------------------------------------------------------------------
#set solib-search-path <current-coredump-analysis-libraries>


# ---------------------------------------------------------------------------------------------------------------------------------
# --                                                     Directory Commands                                                      --
# ---------------------------------------------------------------------------------------------------------------------------------

# ---------------------------------------------------------------------------------------------------------------------------------
#
# Define a source path substitution rule, and add it at the end of the current list of existing substitution rules. If a rule
# with the same from was already defined, then the old rule is also deleted.
#
#    Examine on a running session using the following command:
#
#       show substitute-path
#
# https://sourceware.org/gdb/current/onlinedocs/gdb/Source-Path.html#Source-Path
#
# NOTE: Paths are obtained from the Jenkins Build Server
#
# ---------------------------------------------------------------------------------------------------------------------------------
#set substitute-path /home/jenkins/jenkins_slave/workspace/trunk__EmbeddedCcu <trunk-prj-src-files-emb-root-dir>
#set substitute-path /home/jenkins/jenkins_slave/workspace/b13.00_integration__EmbeddedCcu <b13-prj-src-files-emb-root-dir>
#set substitute-path /home/jenkins/jenkins_slave/workspace/b13.00.1201_integration__EmbeddedCcu <b13-proj-src-files-emb-root-dir>
#set substitute-path /home/jenkins/jenkins_slave/workspace/b13.0.1307_integration__EmbeddedCcu <b13-proj-src-files-emb-root-dir>


set language c++
set output-radix 16


     16. Save the file and exit gedit


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                     Configure A Post Mortem Debug Configuration In Eclipse                                      ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Ensure that you have a project containing the source code corresponding to the binary that generated the core file loaded
   into Eclipse before you start the steps below.


   Execute The Following In Eclipse
   ────────────────────────────────
      1. Click "Open Perspective" button (plus symbol on square with an internal cross) on the right hand side of the main window
      2. Select the "Debug" perspective and click "Open"
      3. Click the white down arrow on the right of the debug icon (green bug) in the center of the main window
      4. Click "Debug Configurations..." from the drop down menu
      5. Select "C/C++ Postmortem Debugger" tree item
      6. Click the new launch configuration icon (white rectangle with plus symbol) on the left had side of the window
      7. Enter the following data into the "Name" textbox:

            <user-friendly-name-for-configuration>
            i.e. trunk_core_research_DE12345

      8. Configure the entries on the "Main" tab

            a. Enter the following data into the "Project" textbox (via manual entry or "Browse..." button):

                  <project-name-of-corresponding-binary-that-created-core>
                  (ex: trunk)

            b. Enter the following data into the "C/C++ Application" textbox (via manual entry or "Browse..." button):

                  <path-to-binary-with-symbols-corresponding-to-binary-that-created-core>/<binary-with-symbols>
                  (ex: /data/dataworkspace/trunk/ccu/base/build/core/out/map.gdb.bin)

            c. Click the "Disable auto build" radio button

            d. Enter the following data into the "Core file <additional-text>" textbox (via manual entry or "Browse..." button):

                  <path-to-binary-core-file>/<binary-core-file>
                  (ex: /data/dataworkspace/corefiles/core.harris-cwp2.map.496)

      9. Click the "Apply" button
     10. Configure the entries on the "Debugger" tab

            a. Enter the following data into the "GDB Debugger" textbox (via manual entry or "Browse..." button):

                  <path-to-cross-compiled-debugger>/<cross-compiled-debugger-binary>
                  (ex: /usr/src/gdb-7.12.1/gdb/gdb)

            b. Enter the following data into the "GDB Command File" textbox (via manual entry or "Browse..." button):

                  <path-to-core-file-specific-debugger-initialization-file>/<core-file-specific-debugger-initialization-file>
                  (ex: /data/dataworkspace/coredump_targetfs/trunk_core_research_DE12345/.gdbinit)

     11. Click the "Apply" button
     12. Click the "Debug" button
