╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Jenkins_Info.txt                                                                                                                                                        ║
║                                                                                                                                                                         ║
║ Document Encoding           : UTF-8, UNIX Line Terminator                                                                                                               ║
║ Document Best Viewed/Printed: Page{Ledger, Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.30518.xx (01 Nov 18) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added sections                                                                                                                          ║
║  1.01.31118.xx (07 Nov 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added hats information                                                                                                                  ║
║  1.02.34718.xx (13 Dec 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added vcast information                                                                                                                 ║
║  1.03.00919.xx (09 Jan 19) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional reference information                                                                                                  ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                              Reference                                                                                  ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Jenkins, Docker, Proxies, and Compose                                                                                                                                 ║
║   -------------------------------------                                                                                                                                 ║
║      https://engineering.riotgames.com/news/jenkins-docker-proxies-and-compose                                                                                          ║
║                                                                                                                                                                         ║
║   Jenkins Pipeline Syntax                                                                                                                                               ║
║   -----------------------                                                                                                                                               ║
║      https://jenkins.io/doc/book/pipeline/syntax/                                                                                                                       ║
║      https://wilsonmar.github.io/jenkins2-pipeline/                                                                                                                     ║
║                                                                                                                                                                         ║
║   Jenkins Parameterized Pipelines                                                                                                                                       ║
║   -------------------------------                                                                                                                                       ║
║      https://github.com/jenkinsci/pipeline-model-definition-plugin/wiki/Parametrized-pipelines                                                                          ║
║                                                                                                                                                                         ║
║   Jenkins MySQL Connector In Script                                                                                                                                     ║
║   ---------------------------------                                                                                                                                     ║
║      https://stackoverflow.com/questions/26614316/connector-j-mysql-driver-in-jenkins-script-console-scriptler                                                          ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Notes                                                                                    ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Docker Information                                                                                                                                                    ║
║   ------------------                                                                                                                                                    ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Docker_Info.txt                                                       ║
║                                                                                                                                                                         ║
║   Hats Setup                                                                                                                                                            ║
║   ----------                                                                                                                                                            ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Hats_Setup.txt                                                        ║
║                                                                                                                                                                         ║
║   VectorCAST Setup                                                                                                                                                      ║
║   ----------------                                                                                                                                                      ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/VectorCAST_Setup.txt                                                  ║
║                                                                                                                                                                         ║
║   Embedded Agent Pipeline Job                                                                                                                                           ║
║   ---------------------------                                                                                                                                           ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/jenkins-docker/HLRobustness_Jenkins_MAP_Pipeline.txt                            ║
║                                                                                                                                                                         ║
║   Embedded Tool Framework Agent Pipeline Job                                                                                                                            ║
║   ------------------------------------------                                                                                                                            ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/jenkins-docker/Hats_Pipeline.txt                                                ║
║                                                                                                                                                                         ║
║   Embedded MySQL Pipeline Job                                                                                                                                           ║
║   ---------------------------                                                                                                                                           ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/jenkins-docker/MySQL_Pipeline.txt                                               ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                              Docker Common                                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Prerequisites For Installations
   ═══════════════════════════════
      1. An account on the VCS21 configuration management repository
      2. Docker installed with experimental features enabled (ref: "Docker Information" above)
      3. Desired Docker image(s) built within Docker installation (ref: "Hats Setup", "VectorCAST Setup" above)



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                           Jenkins Docker Images                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Building Jenkins Docker Image
   ═════════════════════════════
      1. Open a terminal window
      2. Make a directory for the Jenkins Docker Image Source by typing the following command(s) into the terminal window:

            mkdir <jenkins-docker-image-source-dir>
            (ex: mkdir ~/jenkins-docker)

      3. Checkout the Jenkins Docker Image Source from source code management by typing the following command(s) into the
         terminal window:

            svn co <repository-location-of-jenkins-docker-image-source> <local-destination-dir>
            (ex: svn co https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/jenkins-docker ~/jenkins-docker)

      4. Build the Jenkins Docker Image by typing the following command(s) into the terminal window:

            cd <jenkins-docker-image-source-dir>
            (ex: cd ~/jenkins-docker)

            ./build-jenkins-docker-image.sh

      5. Verify that the Jenkins Docker Image build by typing the following command(s) into the terminal window and scanning the
         resulting output for the image (the image name defaults to "jenkins-platform"):

            docker images



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                         Jenkins Docker Containers                                                                       ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Create A New Jenkins Container
   ══════════════════════════════
      1. Open a terminal window
      2. Create a new container based on the Jenkins Docker Image by typing the following command(s) into the terminal window:

            cd <jenkins-docker-image-source-dir>
            (ex: cd ~/jenkins-docker)

            ./create_jenkins_docker_container.sh -c
            NOTE: The command above script command uses the default values, to use other values, refer to the script help

      3. Open a web browser on the machine running the Docker container
      4. Navigate to the following URL and follow the install instructions

            http://127.0.0.1:8080


   Create A New Jenkins Container With MySQL Connection
   ════════════════════════════════════════════════════
      1. Open a terminal window
      2. Verify that there is an existing MySQL Docker container running
      3. Determine the user defined bridge address for the existing MySQL Docker container, and store it in an environment variable by typing the
         following command(s) into the terminal window:

            MYSQL_INSTANCE_IP=$(docker inspect <mysql-container-name> | grep -e '"IPAddress": "[0-9].*"' | sed 's/.*"\(1.*\)".*/\1/g')
            (ex: MYSQL_INSTANCE_IP=$(docker inspect mysql_instance | grep -e '"IPAddress": "[0-9].*"' | sed 's/.*"\(1.*\)".*/\1/g'))

      4. Create a new container based on the Jenkins Docker Image by typing the following command(s) into the terminal window:

            docker run --rm --hostname <container-hostname> \
                            --name <container-name> \
                            --network <user-defined-bridge-network-name> \
                            --add-host=<mysql-container-hostname>:$MYSQL_INSTANCE_IP \
                            -p 8080:8080 \
                            -p 50000:50000 \
                            -v /var/run/docker.sock:/var/run/docker.sock \
                            <jenkins-docker-image>

            (ex: docker run --rm --hostname jenkins-tst \
                            --name jenkins_instance \
                            --network bc-demo \
                            --add-host=bc-demo-sql:$MYSQL_INSTANCE_IP \
                            -p 8080:8080 \
                            -p 50000:50000 \
                            -v /var/run/docker.sock:/var/run/docker.sock \
                            jenkins-platform)

      5. Open a web browser on the machine running the Docker container
      6. Navigate to the following URL and follow the install instructions

            http://127.0.0.1:8080


   Connect To An Existing Jenkins Container
   ════════════════════════════════════════
      1. Open a terminal window
      2. Connect to an existing container by typing the following command(s) into the terminal window:

            cd <jenkins-docker-image-source-dir>
            (ex: cd ~/jenkins-docker)

            ./create_jenkins_docker_container.sh -a
            NOTE: The command above script command uses the default values, to use other values, refer to the script help



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                       Jenkins Master Configuration                                                                      ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Jenkins Configuration For Ephemeral Docker Containers
   ═════════════════════════════════════════════════════
      1. Open a web browser on the machine running the Docker container
      2. Navigate to the following URL and login to Jenkins

            http://127.0.0.1:8080

      Add Docker Plugin(s)
      ────────────────────
         1. On the main Jenkins page, left click the "Manage Jenkins" link on the left side
         2. On the "Manage Jenkins" page, left click the "Manage Plugins" link
         3. Left click the "Available" tab
         4. Scroll down to the "Cloud Providers" section
         5. Check the "Docker" checkbox
         6. Left click the "Install without restart" button at the bottom of the page, wait for plugin to install

      Configure Cloud Provider
      ────────────────────────
         1. On the main Jenkins page, left click the "Manage Jenkins" link on the left side
         2. On the "Manage Jenkins" page, left click the "Configure System" link
         3. Scroll down to the "Cloud" section
         4. Left click the "Add a new cloud" button, left click the "Docker" option
         5. Left click the "Docker Cloud details..." button
         6. Add the following text to the "Docker Host URI" textbox:

               Local Docker
               ------------
               unix:///var/run/docker.sock

               Remote Docker
               ------------
               tcp:///<ip-address-of-docker-server>:<port>
               (ex: tcp://192.168.155.182:2736)

         7. Left click the "Test Connection" button, verify that version information is displayed on the page
         8. Check the "Enabled" checkbox
         9. Left click the "Save" button at the bottom of the page


   Jenkins Configuration For MySQL Databases
   ═════════════════════════════════════════
      1. Open a web browser on the machine running the Docker container
      2. Navigate to the following URL and login to Jenkins

            http://127.0.0.1:8080

      Add MySQL Database Plugin(s)
      ────────────────────────────
         1. On the main Jenkins page, left click the "Manage Jenkins" link on the left side
         2. On the "Manage Jenkins" page, left click the "Manage Plugins" link
         3. Left click the "Available" tab
         4. Scroll down to the "Database" section
         5. Check the "MySQL Database Plugin" checkbox
         6. Left click the "Install without restart" button at the bottom of the page, wait for plugin to install

      Configure Global Database
      ─────────────────────────
         1. On the main Jenkins page, left click the "Manage Jenkins" link on the left side
         2. On the "Manage Jenkins" page, left click the "Configure System" link
         3. Scroll down to the "Global Database" section
         4. Modify the "Database" dropdown combo box to have the following value:

            "MySQL"

         5. Add the hostname of the MySQL server to the "Host Name" textbox
         6. Add the database name to the "Database" textbox
         7. Add the user name to the "Username" textbox
         8. Add the password to the "Password" textbox
         9. Add a basic connection query to the "Validation Query" textbox
        10. Left click the "Test Connection" button, verify that the text "OK" is displayed on the page
        11. Left click the "Save" button at the bottom of the page



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                   Jenkins Embedded Agent Configuration                                                                  ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Configure VCAST Platform Docker Agent Template (Ephemeral Container)
   ════════════════════════════════════════════════════════════════════
      1. On the main Jenkins page, left click the "Manage Jenkins" link on the left side
      2. On the "Manage Jenkins" page, left click the "Configure System" link
      3. Scroll down to the "Cloud" section
      4. Left click the "Docker Agent templates..." button under the "Docker" cloud
      5. Left click the "Add Docker Template" button
      6. Add the following text to the "Labels" textbox:

            HLRobustnessNode

      7. Check the "Enabled" checkbox
      8. Add the following text to the "Docker Image" textbox:

            vcast-platform

      9. Left click the "Container settings..." button
     10. Add the following text to the "Hostname" textbox:

            vcast-tst

     11. Add the following text to the "Volumes" textbox:

            <docker-volume-to-mount>:<container-dir-to-map-to-volume>
            (ex: trunk-for-docker:/home/developer/svn-working-dir)

     12. Check the "Run container privileged" checkbox
     13. Add the following text to the "Remote File System Root" textbox:

            /home/developer

     14. Modify the "Usage" dropdown combo box to have the following value:

            "Only build jobs with label expressions matching this node"

     15. Add the following text to the "User" textbox:

            developer

     16. Modify the "Pull strategy" dropdown combo box to have the following value:

            "Never pull"

     17. Left click the "Save" button at the bottom of the page



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                Jenkins Embedded Agent Job Configuration                                                                 ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Configure High Level Robustness MAP Pipeline Job
   ════════════════════════════════════════════════
      1. Verify that the "Jenkins Embedded Agent Configuration" steps have been completed
      2. On the main Jenkins page, left click the "New Item" link on the left side
      3. Add the following text to the "Enter an item name" textbox:

            HLRobustnessPipeline_MAP

      4. Left click on the "Pipeline" link
      5. Left click the "OK" button at the bottom of the page
      6. Scroll down to the "Pipeline" section
      7. Populate the "Script" textbox with the contents of the source file (ref: "Embedded Agent Pipeline Job")
      8. Left click the "Save" button at the bottom of the page



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                            Jenkins Embedded Tool Framework Agent Configuration                                                          ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Configure Hats Docker Agent Template (Ephemeral Container)
   ══════════════════════════════════════════════════════════
      1. On the main Jenkins page, left click the "Manage Jenkins" link on the left side
      2. On the "Manage Jenkins" page, left click the "Configure System" link
      3. Scroll down to the "Cloud" section
      4. Left click the "Docker Agent templates..." button under the "Docker" cloud
      5. Left click the "Add Docker Template" button
      6. Add the following text to the "Labels" textbox:

            HatsNode

      7. Check the "Enabled" checkbox
      8. Add the following text to the "Docker Image" textbox:

            hats-platform

      9. Left click the "Container settings..." button
     10. Add the following text to the "Hostname" textbox:

            hats-tst

     11. Add the following text to the "Volumes" textbox:

            <docker-volume-to-mount>:<container-dir-to-map-to-volume>
            (ex: trunk-for-docker:/home/developer/svn-working-dir)

     12. Check the "Run container privileged" checkbox
     13. Add the following text to the "Remote File System Root" textbox:

            /home/developer

     14. Modify the "Usage" dropdown combo box to have the following value:

            "Only build jobs with label expressions matching this node"

     15. Add the following text to the "User" textbox:

            developer

     16. Modify the "Pull strategy" dropdown combo box to have the following value:

            "Never pull"

     17. Left click the "Save" button at the bottom of the page



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                          Jenkins Embedded Tool Framework Agent Job Configuration                                                        ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Configure Hats Pipeline Job
   ═══════════════════════════
      1. On the main Jenkins page, left click the "New Item" link on the left side
      2. Add the following text to the "Enter an item name" textbox:

            HatsPipeline

      3. Left click on the "Pipeline" link
      4. Left click the "OK" button at the bottom of the page
      5. Scroll down to the "Pipeline" section
      6. Populate the "Script" textbox with the contents of the source file (ref: "Embedded Tool Framework Agent Pipeline Job")
      7. Left click the "Save" button at the bottom of the page



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                        Jenkins MySQL Job Configuration                                                                  ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Configure MySQL Pipeline Job
   ════════════════════════════
      1. On the main Jenkins page, left click the "New Item" link on the left side
      2. Add the following text to the "Enter an item name" textbox:

            EmbMySQLPipeline

      3. Left click on the "Pipeline" link
      4. Left click the "OK" button at the bottom of the page
      5. Scroll down to the "General" section
      6. Check the "This project is parameterized" checkbox
      7. Modify the "Add Parameter" dropdown combo box to have the following value:

            "String Parameter"

      8. Add the following text to the "Name" textbox:

            BuildNumber

      9. Add the following text to the "Default Value" textbox:

            1

     10. Add the following text to the "Description" textbox:

            The build number for the job

     11. Scroll down to the "Pipeline" section
     12. Populate the "Script" textbox with the contents of the source file (ref: "Embedded MySQL Pipeline Job")
     13. Left click the "Save" button at the bottom of the page
