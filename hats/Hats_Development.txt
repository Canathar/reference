╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Hats_Development.txt                                                                                                                                                    ║
║                                                                                                                                                                         ║
║ Document Encoding           : UTF-8, UNIX Line Terminator                                                                                                               ║
║ Document Best Viewed/Printed: Page{Ledger, Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.31618.xx (12 Nov 18) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added header, added reference data                                                                                                      ║
║  1.01.31918.xx (15 Nov 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Clarified several steps, added additional steps                                                                                         ║
║  1.02.32018.xx (16 Nov 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Clarified several steps                                                                                                                 ║
║  1.03.34718.xx (13 Dec 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added reference links                                                                                                                   ║
║  1.04.09319.xx (03 Apr 19) - Development Update {J. Laccone}                                                                                                            ║
║                                 Updated for new versions                                                                                                                ║
║  1.05.17019.xx (19 Jun 19) - Development Update {J. Laccone}                                                                                                            ║
║                                 Updated with new configraton procedure                                                                                                  ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Reference                                                                                ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Docker Information                                                                                                                                                    ║
║   ------------------                                                                                                                                                    ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Docker_Info.txt                                                       ║
║                                                                                                                                                                         ║
║   Hats Setup                                                                                                                                                            ║
║   ----------                                                                                                                                                            ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Hats_Setup.txt                                                        ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Prerequisites
   ═════════════
      1. An account on the VCS21 configuration management repository
      2. Docker installed with experimental features enabled (ref: "Docker Information" above)
      3. Desired Docker image(s) built within Docker installation (ref: "Hats Setup" above)


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                 Initial Development Environment Configuration                                                           ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Setup Container For Hats Development (As Opposed To Test Use)
   ═════════════════════════════════════════════════════════════
      1. Open a terminal window
      2. Create a new container based on the hats Docker Image with a bind mount to the root of your local embedded development directory by typing the following
         command(s) into the terminal window:

            cd <hats-docker-image-source-dir>
            (ex: cd ~/hats-docker)

            ./create_hats_docker_container.sh --container-mount-type bind --container-mount <local-emb-dev--root-dir> --mirror-host-network -c)
            (ex: ./create_hats_docker_container.sh --container-mount-type bind --container-mount /data/dataworkspace/trunk --mirror-host-network -c)


         Add Symbolic Link For developer User
         ────────────────────────────────────
            1. Create a symbolic link to the root of your local embedded development directory by typing the following command(s) into the containers terminal window:

                  ln -s /home/developer/svn-working-dir/ccu /home/developer/vdriveDEV


         Add Development Packages To pip
         ───────────────────────────────
            1. Add additional development packages to pip by typing the following command(s) into the containers terminal window:

                  sudo /usr/local/bin/pip2.7 install pylint pydocstyle psycopg2-binary




   Build hats Configuration Files
   ══════════════════════════════
      1. Open a terminal window to an existing hats container
      2. Remove the existing configuration files for hats by typing the following command(s) into the containers terminal window:

            rm -f /home/developer/hats.conf
            cd /home/developer/hats-working-scripts

      3. Generate configuration files for hats by typing the following command(s) into the containers terminal window:

            python2.7 create_config_file.py --write-config --log \
                                            --virtual-cwp-device-file <hats-working-config>~/<hats-virtual-cwps>.json \
                                            --cwp-device-file <hats-working-config>~/<hats-required-cwps>.json \
                                            --proxy-ccs-file <hats-working-config>~/<hats-required-proxies>.json \
                                            --files-contain-encrypted-passwords \
                                            --store-encrypted-passwords

            (ex: python2.7 create_config_file.py --write-config --log \
                                                 --virtual-cwp-device-file ~/hats-working-config/hats_virtual_cwps.json \
                                                 --cwp-device-file ~/hats-working-config/hats_basic_cwps.json \
                                                 --proxy-ccs-file ~/hats-working-config/hats_basic_proxies.json \
                                                 --files-contain-encrypted-passwords \
                                                 --store-encrypted-passwords)


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                 Building/Installing hats Wheel (for Python 2.x )                                                        ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Build The hats Wheel Distribution
   ═════════════════════════════════
      1. Open a terminal window to an existing hats container
      2. Build the hats wheel distribution by typing the following command(s) into the containers terminal window:
         NOTE: The command shown below will build, but not version the wheel distribution.
               For a full list of available command line options, invoke the script with no command line arguments.

            /home/developer/vdriveDEV/base/tools/emb/build-hats.sh -b



docker cp  /tmp/hats-dev/dist/hats-0.19.*.whl hats_instance:/tmp


   Add hats Wheel Distribution To pip
   ══════════════════════════════════
      1. Verify that a hats wheel has been built (ref: "Build The hats Wheel Distribution" above)
      2. Open a terminal window to an existing hats container
      3. Add hats wheel distribution to pip by typing the following command(s) into the containers terminal window:

            sudo /usr/local/bin/pip2.7 install --upgrade /tmp/hats-dev/dist/hats-<version-wildcard>.whl
            (ex: sudo /usr/local/bin/pip2.7 install --upgrade /tmp/hats-dev/dist/hats-0.19.*.whl)

      4. Remove the existing hats scripts and copy the new hats scripts to the individuals script working directory by typing the following command(s) into
         the containers terminal window:

            rm -f /home/developer/hats-working-scripts/*
            cp /usr/local/hats-scripts/* /home/developer/hats-working-scripts


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                              Developing hats Framework Components (for Python 2.x )                                                     ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Developing hats APIs
   ════════════════════
      1. Create a new container based on the hats Docker Image
      2. Verify that the container has been setup for hats development (ref: "Initial Development Environment Configuration" above)
      3. Change directory to the hats directory by typing the following command(s) into the containers terminal window:

            cd /home/developer/vdriveDEV/base/tools/emb/hats-dev/hats


   Developing hats Unit Tests
   ══════════════════════════
      1. Create a new container based on the hats Docker Image
      2. Verify that the container has been setup for hats development (ref: "Initial Development Environment Configuration" above)
      3. Change directory to the hats unit test directory by typing the following command(s) into the containers terminal window:

            cd /home/developer/vdriveDEV/base/tools/emb/hats-dev/hats-tests


   Developing hats Scripts
   ═══════════════════════
      1. Create a new container based on the hats Docker Image
      2. Verify that the container has been setup for hats development (ref: "Initial Development Environment Configuration" above)
      3. Change directory to the hats-scripts directory by typing the following command(s) into the containers terminal window:

            cd /home/developer/vdriveDEV/base/tools/emb/hats-dev/hats-scripts
