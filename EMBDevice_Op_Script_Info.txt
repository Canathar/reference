╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ EMBDevice_Op_Script_Info.txt                                                                                                                                            ║
║                                                                                                                                                                         ║
║ Document Encoding           : UTF-8, UNIX Line Terminator                                                                                                               ║
║ Document Best Viewed/Printed: Page{Ledger, Landscape, 0.25in Side Margins} Font{Monospace Font, Normal, 10pt}                                                           ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.10619.xx (16 Apr 19) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added header, added reference data                                                                                                      ║
║  1.01.10719.xx (17 Apr 19) - Development Update {J. Laccone}                                                                                                            ║
║                                 Documented additional procedures                                                                                                        ║
║  1.02.10819.xx (18 Apr 19) - Development Update {J. Laccone}                                                                                                            ║
║                                 Clarified steps                                                                                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Reference                                                                                ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Local Manager Download Script (for embedded devices) Repository Location                                                                                              ║
║   ------------------------------------------------------------------------                                                                                              ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Management/BaselineManagement/Scripts/VCS21_Linux_Install_Scripts/embedded/download.sh          ║
║                                                                                                                                                                         ║
║   Local Manager Install Script (for embedded devices) Repository Location                                                                                               ║
║   -----------------------------------------------------------------------                                                                                               ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Management/BaselineManagement/Scripts/VCS21_Linux_Install_Scripts/embedded/install.sh           ║
║                                                                                                                                                                         ║
║   Local Manager Rollback Script (for embedded devices) Repository Location                                                                                              ║
║   ------------------------------------------------------------------------                                                                                              ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Management/BaselineManagement/Scripts/VCS21_Linux_Install_Scripts/embedded/rollback.sh          ║
║                                                                                                                                                                         ║
║   Local Manager Verify Script (for embedded devices) Repository Location                                                                                                ║
║   ----------------------------------------------------------------------                                                                                                ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Management/BaselineManagement/Scripts/VCS21_Linux_Install_Scripts/embedded/verify.sh            ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   Common Embedded Device Install Script Repository Location                                                                                                             ║
║   ---------------------------------------------------------                                                                                                             ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/bin/scripts/install.sh                                                                 ║
║                                                                                                                                                                         ║
║   Common Embedded Device Rollback Script Repository Location                                                                                                            ║
║   ----------------------------------------------------------                                                                                                            ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/bin/scripts/rollback.sh                                                                ║
║                                                                                                                                                                         ║
║   Common Embedded Device Running Comapre Script Repository Location                                                                                                     ║
║   ------------------------------------------------------[----------                                                                                                     ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/bin/scripts/runningCompare.sh                                                          ║
║                                                                                                                                                                         ║
║   Common Embedded Device Verify Script Repository Location                                                                                                              ║
║   --------------------------------------------------------                                                                                                              ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/bin/scripts/verify.sh                                                                  ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   CWP Device Start Script Repository Location                                                                                                                           ║
║   -------------------------------------------                                                                                                                           ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/bin/cwp2/scripts/start_map.sh                                                          ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Embedded/bin/cwp2/scripts/start_pui.sh                                                          ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                  Notes                                                                                  ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Docker Information                                                                                                                                                    ║
║   ------------------                                                                                                                                                    ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Docker_Info.txt                                                       ║
║                                                                                                                                                                         ║
║   CWP Device Image Dockerfile                                                                                                                                           ║
║   ---------------------------                                                                                                                                           ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/cwp2-docker/Dockerfile                                                          ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                                                         ║
║                                                                          === Prerequisites  ===                                                                         ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Preparing The Source Directory
   ══════════════════════════════
      1. Open a terminal window
      2. Change to the local subversion working bin directory (pulled from /repositories/ion/vcs21/irad/trunk/Embedded) by typing the following command(s)
         into the terminal window:

            cd <local-subversion-dir>/bin
            (ex: cd /data/dataworkspace/trunk/bin)

      3. Add the missing source files to a local Subversion Embedded repo by typing the following command(s) into the terminal window:

            svn up --set-depth infinity

      4. Build the embedded software baseline
      5. Update the library files by typing the following command(s) into the terminal window:

            cd <local-subversion-dir>
            (ex: cd /data/dataworkspace/trunk)

            cp ccu/_build/tps_externals/lib/libagent++.so bin/cwp2/libs && \
            cp ccu/_build/tps_externals/lib/libexpat.so.0.5.0 bin/cwp2/libs && \
            cp ccu/_build/tps_externals/lib/libsnmp++.so.2.0.0 bin/cwp2/libs && \
            cp ccu/_build/tps_externals/lib/libM5tSipUa.so.42 bin/cwp2/libs

      6. Update the binary files by typing the following command(s) into the terminal window:

            cd <local-subversion-dir>
            (ex: cd /data/dataworkspace/trunk)

            cp ccu/_install/bin/appversion bin/common && \
            cp ccu/_install/bin/watchdogs bin/common && \
            cp ccu/_install/bin/map.bin bin/cwp2/map && \
            cp ccu/_install/bin/pui.bin bin/pui/linux && \
            cp ccu/_install/bin/rdt.bin bin/xmg2/rdt && \
            cp ccu/_install/bin/rmg.bin bin//xmg2/rmg && \
            cp ccu/_install/bin/tmg.bin bin/xmg2/tmg && \
            cp ccu/_install/bin/qmg.bin bin/xmg2/qmg && \
            cp ccu/_install/bin/riu.bin bin/riu2/riu && \
            cp ccu/_install/bin/start_rmt.bin bin/riu2/rmt && \
            cp ccu/_install/bin/start_rmt.bin bin/xmg2/rdt/rmt

      7. Update the config files by typing the following command(s) into the terminal window:

            cd <local-subversion-dir>
            (ex: cd /data/dataworkspace/trunk)

            cp ccu/base/app/pui/config/current/NVS/1024x768/pui_static.xml* bin/cwp2/static_xml && \
            cp ccu/base/app/pui/config/current/NVS/1024x768/pui_sparemode.xml* bin/cwp2/static_xml

      8. Update the script files by typing the following command(s) into the terminal window:

            cd <local-subversion-dir>
            (ex: cd /data/dataworkspace/trunk)

            cp ccu/base/tools/scripts/common/* bin/scripts && \
            cp ccu/base/tools/scripts/cwp2/* bin/cwp2/scripts && \
            cp ccu/base/tools/scripts/xmg2/* bin/xmg2/scripts && \
            cp ccu/base/tools/scripts/riu2/* bin/riu2/scripts

      9. Execute the packaging script to generate the archive files/checksum files

            cd <local-subversion-dir>/bin
            (ex: cd /data/dataworkspace/trunk/bin)

            ./bm_prepare_install.sh HEAD <emb-src-files-dir> <version>
            (ex: ./bm_prepare_install.sh HEAD /data/dataworkspace/cwp2-docker/emb-src-files 11.22.33)


   Running An Image With An Active SSH Server (Creating A Container)
   ═════════════════════════════════════════════════════════════════
      1. Open a terminal window
      2. Create a new Docker container by typing the following command(s) into the terminal window:

            cd <local-cwp2-docker-image-dir>
            (ex: cd /data/dataworkspace/cwp2-docker)

            ./create_cwp2_docker_container.sh --ssh-server-host-port <host-port-to-bind-with> -c
            (ex: ./create_cwp2_docker_container.sh --ssh-server-host-port 3030 -c)

      3. Configure and start the containers SSH Server by typing the following command(s) into the containers terminal window:

            initSSHServer.sh



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                                                         ║
║                                                                       === Adding Additional Software  ===                                                               ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Adding A New Version Of The Embedded CWP Software
   ═════════════════════════════════════════════════
      1. Verify that the "Preparing The Source Directory" procedure has been completed
      2. Verify that the "Running An Image With An Active SSH Server (Creating A Container)" procedure has been completed
      3. Open a terminal window
      4. If required, add an ssh key to the container by typing the following command(s) into the terminal window:

            sshpass -p HarrisVCS21 ssh-copy-id -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa.pub root@<cwp-device-ip-address>
            (ex: sshpass -p HarrisVCS21 ssh-copy-id -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa.pub root@172.17.0.2)
            (ex: sshpass -p HarrisVCS21 ssh-copy-id -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa.pub root@172.24.24.157)

      5. Pre-populate the devices new software version directory by typing the following command(s) into the terminal window:

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> '/home/bin/pre-populate-new.sh'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 '/home/bin/pre-populate-new.sh')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 '/home/bin/pre-populate-new.sh')

      6. Add a new version of the embedded software by typing the following command(s) into the terminal window:

            cd <emb-src-files-dir>/<cwp-device-software-directory>
            (ex: cd /data/dataworkspace/cwp2-docker/emb-src-files/install/bm/cwp/cwp_wc2.2)

            rsync -aHrze "ssh -q -o StrictHostKeyChecking=no \
                              -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null \
                              -o BatchMode=yes" \
                  --delete --force --prune-empty-dirs --timeout=90 . \
                  root@<cwp-device-ip-address>:/home/files/install/new
            (ex: rsync -aHrze "ssh -q -o StrictHostKeyChecking=no \
                                   -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null \
                                   -o BatchMode=yes" \
                       --delete --force --prune-empty-dirs --timeout=90 . \
                       root@172.17.0.2:/home/files/install/new)
            (ex: rsync -aHrze "ssh -q -o StrictHostKeyChecking=no \
                                   -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null \
                                   -o BatchMode=yes" \
                       --delete --force --prune-empty-dirs --timeout=90 . \
                       root@172.24.24.157:/home/files/install/new)

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> 'chown -R root.root /home/files/install/new'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 'chown -R root.root /home/files/install/new')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 'chown -R root.root /home/files/install/new')

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> '/home/bin/verify.sh /home/files/install/new'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 '/home/bin/verify.sh /home/files/install/new')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 '/home/bin/verify.sh /home/files/install/new')


   Installing A New Version Of The Embedded CWP Software
   ═════════════════════════════════════════════════════
      1. Verify that the "Adding A New Version Of The Embedded CWP Software" procedure has been completed
      2. Change the operational mode of the cwp device by typing the following command(s) into the terminal window:

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> 'echo -e "NodeMode:OFFLINE" > /tmp/node_mode.txt'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 'echo -e "NodeMode:OFFLINE" > /tmp/node_mode.txt')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 'echo -e "NodeMode:OFFLINE" > /tmp/node_mode.txt')

      3. Install the new version of the embedded software by typing the following command(s) into the terminal window:

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> \
                'gunzip -c /home/files/install/new/install.sh.gz > /home/bin/install.sh; \
                 sed -i "s|/home/bin/application.sh start|#/home/bin/application.sh start|" /home/bin/install.sh; \
                 chmod 775 /home/bin/install.sh; \
                 /home/bin/install.sh > /var/log/baselineManagement.log'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 \
                     'gunzip -c /home/files/install/new/install.sh.gz > /home/bin/install.sh; \
                      sed -i "s|/home/bin/application.sh start|#/home/bin/application.sh start|" /home/bin/install.sh; \
                      chmod 775 /home/bin/install.sh; \
                      /home/bin/install.sh > /var/log/baselineManagement.log')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 \
                     'gunzip -c /home/files/install/new/install.sh.gz > /home/bin/install.sh; \
                      sed -i "s|/home/bin/application.sh start|#/home/bin/application.sh start|" /home/bin/install.sh; \
                      chmod 775 /home/bin/install.sh; \
                      /home/bin/install.sh > /var/log/baselineManagement.log')

      4. Verify the new version of the embedded software by typing the following command(s) into the terminal window:

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> '/home/bin/verify.sh --no-xml /home'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 '/home/bin/verify.sh --no-xml /home')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 '/home/bin/verify.sh --no-xml /home')

      5. Change the operational mode of the cwp device by typing the following command(s) into the terminal window:

            ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@<cwp-device-ip-address> 'echo -e "NodeMode:ONLINE" > /tmp/node_mode.txt'
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.17.0.2 'echo -e "NodeMode:ONLINE" > /tmp/node_mode.txt')
            (ex: ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@172.24.24.157 'echo -e "NodeMode:ONLINE" > /tmp/node_mode.txt')







   Adding A Previous Version Of The Embedded CWP Software
   ══════════════════════════════════════════════════════
      1. Verify that the "Initial CWP Docker Container Setup" has been completed
      2. Open a terminal window
      3. Add a previous version of the embedded software by typing the following command(s) into the terminal window:

            cd <Dockerfile-directory>
            (ex: cd /data/dataworkspace/cwp2-docker)

            docker cp emb-src-files/install/cwp2/files/cwp2/. cwp2_test_instance:/home/files/install/previous

      4. Modify the file permissions of the previous version of the embedded software by typing the following command(s) into the containers terminal window:

            chown root /home/files/install/previous/*; chgrp root /home/files/install/previous/*; chmod 754 /home/files/install/previous/*









#   Utilities In The Container                                                                                                                                            #
#   ==========================                                                                                                                                            #
#      Once inside a container, the following command(s) will add diagnostic/development utilities                                                                        #
#                                                                                                                                                                         #
#         apk add --update binutils (for readelf, ldd)                                                                                                                    #
#                                                                                                                                                                         #
#                                                                                                                                                                         #
#   Adding a "previous" version                                                                                                                                           #
#   ===========================                                                                                                                                           #
#                                                                                                                                                                         #
#      Outside Container                                                                                                                                                  #
#      -----------------                                                                                                                                                  #
#         cd <Dockerfile-directory>                                                                                                                                       #
#         (ex: cd /data/dataworkspace/cwp2-docker)                                                                                                                        #
#                                                                                                                                                                         #
#         docker cp emb-src-files/install/cwp2/files/cwp2/. cwp2_test_instance:/home/files/install/previous                                                               #
#                                                                                                                                                                         #
#      Inside Container                                                                                                                                                   #
#      ----------------                                                                                                                                                   #
#         chown root /home/files/install/previous/*; chgrp root /home/files/install/previous/*; chmod 754 /home/files/install/previous/*                                  #
#                                                                                                                                                                         #
#                                                                                                                                                                         #
#                                                                                                                                                                         #
#   Preparing The Source Directory                                                                                                                                        #
#   ==============================                                                                                                                                        #
#      1. Open a terminal window                                                                                                                                          #
#      2. Change to the local subversion working bin directory (pulled from /repositories/ion/vcs21/irad/trunk/Embedded)                                                  #
#                                                                                                                                                                         #
#            cd <local-subversion-dir>/bin                                                                                                                                #
#            (ex: cd /data/dataworkspace/trunk/bin)                                                                                                                       #
#                                                                                                                                                                         #
#      3. Add the missing source files to a local Subversion Embedded repo                                                                                                #
#                                                                                                                                                                         #
#            svn up --set-depth infinity                                                                                                                                  #
#                                                                                                                                                                         #
#      4. Execute the packaging script to generate the archive files/checksum files                                                                                       #
#                                                                                                                                                                         #
#            ./prepare_install.sh base <Dockerfile-directory>/emb-src-files cwp2                                                                                          #
#            (ex: ./prepare_install.sh base /data/dataworkspace/cwp2-docker/emb-src-files cwp2)                                                                           #
#                                                                                                                                                                         #
#                                                                                                                                                                         #
#   Building Image                                                                                                                                                        #
#   ==============                                                                                                                                                        #
#      1. Open a terminal window                                                                                                                                          #
#      2. Change to the docker image directory                                                                                                                            #
#                                                                                                                                                                         #
#            cd <Dockerfile-directory>                                                                                                                                    #
#            (ex: cd /data/dataworkspace/cwp2-docker)                                                                                                                     #
#                                                                                                                                                                         #
#      3. Build and tag the image from the Dockerfile                                                                                                                     #
#                                                                                                                                                                         #
#            docker build -t <tag> <source-dir>                                                                                                                           #
#            (ex: docker build -t cwp2-test-platform .)                                                                                                                   #
#                                                                                                                                                                         #
#                                                                                                                                                                         #
#   Running An Image (Creating A Container)                                                                                                                               #
#   =======================================                                                                                                                               #
#      1. Open a terminal window                                                                                                                                          #
#      2. Build a new container from and image                                                                                                                            #
#                                                                                                                                                                         #
#            docker run <options> <image> <command> <arg>                                                                                                                 #
#            (ex: docker run -it --rm --privileged --hostname harris-cwp2-tst --name cwp2_test_instance cwp2-test-platform sh -l)                                         #
#                                                                                                                                                                         #
#                                                                                                                                                                         #
#   Attaching To A Running Image (Creating A New Terminal)                                                                                                                #
#   ======================================================                                                                                                                #
#      1. Open a terminal window                                                                                                                                          #
#      2. Create an interactive terminal to an executing container                                                                                                        #
#                                                                                                                                                                         #
#            docker exec -it <container-id> <command>                                                                                                                     #
#            (ex: docker exec -it cwp2_test_instance bash)                                                                                                                #

















   Adding a "previous" version
   ===========================

      - Follow the instructions in the Dockerfile for adding the previous files

      Outside Container
      -----------------
         docker cp /data/dataworkspace/DE14496A_trunk/bin/scripts/rollback.sh cwp2_test_instance:/home/bin/rollback.sh

      Inside Container
      ----------------
         chown root /home/bin/rollback.sh; chgrp root /home/bin/rollback.sh; chmod 754 /home/bin/rollback.sh


   Manually execute rollback.sh
   ────────────────────────────
      /home/bin/rollback.sh


   Manually execute verify.sh
   ──────────────────────────
      /home/bin/verify.sh



cd /opt/harris/embedded/
./download.sh /opt/harris/repo/cwp/cwp_wc2.1/ cwp-004
./install.sh cwp-004





╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                                                         ║
║                                                                          === Observations  ===                                                                          ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Local Manager (LM) Executes The Following Embedded Components For A Verification On A CWP Device
   ════════════════════════════════════════════════════════════════════════════════════════════════
      1. Login to the local manager as a maintainer
      2. Navigate to the "Software Update" page for CWP devices
      3. Select the desired CWP device
      4. Press the "Check Version" button
         NOTE1: verify.sh is a wrapper around install.sh and runs by calling install.sh with the --verify option. Neither script will run while /tmp/node_mode.txt
                shows a status of NodeMode: ONLINE. The status must show as OFFLINE

            verify.sh --no-xml /home
            ────────────────────────
               - calls install.sh --verify /home/files/install/current
               - calls applicion.sh verify


            install.sh --verify /home/bin/install/current
            ─────────────────────────────────────────────
               - calls application.sh stop
               - executes internal function: verify


            application.sh verify
            ─────────────────────
               - calls start_map.sh v


            start_map.sh v
            ──────────────
               - calls runningCompare.sh to build the manifest
               - calls runningComapre.sh to compare each file to manifest





            install.sh
            ──────────
               - checks contents of /tmp/node_mode.txt
               - verifies /home/files/install/new/manifest.txt exists
               - verifies /home/files/install/new/version.txt exists
  *bug*        - stops running binary applications
               - executes internal function: verify on /home/files/install/new directory
                    - generates md5sum on contents of manifest.txt file
               - creates /tmp/tftp directory (if required)
               - copies contents of /home/files/install/new to /tmp/tftp
               - executes internal function: installNewFilesAndCompare
                    - executes internal function: readManifestList
                    - executes internal function: storepairoffiles
               - creates /tmp/unzip directory (removes directory first, if required)
               - executes internal function: installFile













To reproduce the bug

   cd /home/files/install/current
   gunzip *.gz













