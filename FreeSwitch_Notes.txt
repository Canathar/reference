╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ FreeSwitch_Notes.txt                                                                                                                                                    ║
║                                                                                                                                                                         ║
║    Document Encoding           : UTF-8, UNIX Line Terminator                                                                                                            ║
║    Document Best Viewed/Printed: Page{Ledger (11x17), Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                                              ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.16318.xx (12 Jun 18) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added header, added reference data                                                                                                      ║
║  1.01.16418.xx (13 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added clarification to several steps                                                                                                    ║
║  1.02.16518.xx (14 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional steps                                                                                                                  ║
║  1.03.16618.xx (15 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Clarified multiple steps                                                                                                                ║
║  1.04.16918.xx (18 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added library build steps                                                                                                               ║
║  1.05.17118.xx (20 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added RPM build steps                                                                                                                   ║
║                                 Changed conference to match new cluster domain                                                                                          ║
║  1.06.17318.xx (22 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Clarified optional steps                                                                                                                ║
║  1.07.17518.xx (24 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional debug steps                                                                                                            ║
║  1.08.17718.xx (26 Jun 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional diagrams                                                                                                               ║
║  1.09.22718.xx (15 Aug 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added document encoding reference, note cleanup                                                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Reference                                                                                ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Real Time Streaming Protocol (RTSP)                                                                                                                                   ║
║   -----------------------------------                                                                                                                                   ║
║      https://tools.ietf.org/html/rfc2326                                                                                                                                ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   A Media Resource Control Protocol (MRCP)                                                                                                                              ║
║   ----------------------------------------                                                                                                                              ║
║      https://tools.ietf.org/html/rfc4463                                                                                                                                ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   Unimrcp Client Integration Manual                                                                                                                                     ║
║   ---------------------------------                                                                                                                                     ║
║      http://www.unimrcp.org/manuals/html/ClientIntegrationManual.html                                                                                                   ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   OpenSIPS Modules                                                                                                                                                      ║
║   ----------------                                                                                                                                                      ║
║      http://www.opensips.org/Documentation/Modules-2-2                                                                                                                  ║
║                                                                                                                                                                         ║
║                                                                                                                                                                         ║
║   OpenSIPS Core Management Interface                                                                                                                                    ║
║   ----------------------------------                                                                                                                                    ║
║      http://www.opensips.org/Documentation/Interface-CoreMI-2-2                                                                                                         ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   apr - Apache Portable Run-time
   apt - APR Toolkit
   mpf - Media Processing Framework

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                        Hosting Application
   FreeSwitch
   ──┬───────
     │
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     │                                                                                                                                                            Interface
     └── mod_unimrcp << Loadable Module >>
         ──┬────────
           │
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           │                                                                                                                                         MRCP v.1 (RTSP) Client
           └── UniMRCP                                                                                                                                    Based on RFC 4463
               ──┬────
                 │
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                 │                                                                                                                                   MRCP v.1 (RTSP) Server
                 └── Ricochet (Jotron Recorder)



                                                                 This is the
                                                                MRCP v1 Bridge

                                 ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
                                 ║                                                                                                                                        ║
                                 ║         uni-rtsp         ╎    mrcp-unirtsp     ╎        mrcp         ╎                mrcp-client                ╎     mod_unimrcp     ║
        RTSP MESSAGES            ║       Library Code       ╎     Module Code     ╎    Library Code     ╎               Library Code                ╎     Module Code     ║
        ─────────────            ║                          ╎                     ╎                     ╎                                           ╎                     ║
                                 ║                          ╎  ┌───────────────┐  ╎  ┌───────────────┐  ╎  ┌───────────────┐     ┌───────────────┐  ╎                     ║
   ┌─────────────────────┐       ║                          ╎  │               │  ╎  │               │  ╎  │               │     │               │  ╎                     ║
   │                     │       ║                          ╎  │      mrcp     │  ╎  │ mrcp message  │  ╎  │      mrcp     │     │     mrcp      │  ╎                     ║
   │      ANNOUNCE       │<─────>║<───┐                     ╎  │    unirtsp    │  ╎  │   (request)   ╞═════╡  application  ╞══╦══╡    client     │  ╎                     ║
   │                     │       ║    │                     ╎  │      sdp      │  ╎  │  (response)   │  ╎  │               │  ║  │    session    │  ╎                     ║
   └─────────────────────┘       ║    │                     ╎  │               │  ╎  │               │  ╎  │               │  ║  │               │  ╎                     ║
                                 ║    │                     ╎  └───────╥───────┘  ╎  └───────╥───────┘  ╎  └───────────────┘  ║  └───────────────┘  ╎                     ║
   ┌─────────────────────┐       ║    │                     ╎          ║          ╎          ║          ╎                     ║                     ╎                     ║
   │                     │       ║    │                     ╎          ║          ╎          ║          ╎                     ║                     ╎                     ║
   │        SETUP        │<─────>║<──┐│                     ╎          ║          ╎          ╚═══════════════════════════════ ║ ═══════════════════════════════╗          ║
   │                     │       ║   ││                     ╎          ║          ╎                     ╎                     ║                     ╎          ║          ║
   └─────────────────────┘       ║   ││                     ╎          ║          ╎                     ╎                     ║                     ╎          ║          ║
                                 ║   ││  ┌───────────────┐  ╎  ┌───────╨───────┐  ╎                     ╎             ┌───────╨───────┐             ╎  ┌───────╨───────┐  ║
   ┌─────────────────────┐       ║   │└─>│               │  ╎  │               │  ╎                     ╎             │               │             ╎  │               │  ║
   │                     │       ║   └──>│               │  ╎  │     mrcp      │  ╎                     ╎             │               │             ╎  │    unimrcp    │  ║
   │    SET_PARAMETER    │<─────>║<─────>│  rtsp client  ╞═════╡    unirtsp    ╞══════════════════════════════════════╡  mrcp client  ╞════════════════╡   module in   │  ║
   │                     │       ║   ┌──>│               │  ╎  │  client agent │  ╎                     ╎             │               │             ╎  │  FreeSwitch   │  ║
   └─────────────────────┘       ║   │┌─>│               │  ╎  │               │  ╎                     ╎             │               │             ╎  │               │  ║
                                 ║   ││  └───────────────┘  ╎  └───────────────┘  ╎                     ╎             └───────────────┘             ╎  └───────────────┘  ║
   ┌─────────────────────┐       ║   ││                     ╎                     ╎                     ╎                                           ╎                     ║
   │                     │       ║   ││                     ╎                     ╎                     ╎                                           ╎                     ║
   │        RECORD       │<─────>║<──┘│                     ╎                     ╎                     ╎                                           ╎                     ║
   │                     │       ║    │                     ╎                     ╎                     ╎                                           ╎                     ║
   └─────────────────────┘       ║    │                     ╎                     ╎                     ╎                                           ╎                     ║
                                 ║    │                     ╎                     ╎                     ╎                                           ╎                     ║
   ┌─────────────────────┐       ║    │                     ╎                     ╎                     ╎                                           ╎                     ║
   │                     │       ║    │                     ╎                     ╎                     ╎                                           ╎                     ║
   │       TEARDOWN      │<─────>║<───┘                     ╎                     ╎                     ╎                                           ╎                     ║
   │                     │       ║                          ╎                     ╎                     ╎                                           ╎                     ║
   └─────────────────────┘       ║                          ╎                     ╎                     ╎                                           ╎                     ║
                                 ║                          ╎                     ╎                     ╎                                           ╎                     ║
                                 ║                          ╎                     ╎                     ╎                                           ╎                     ║
                                 ║                          ╎                     ╎                     ╎                                           ╎                     ║
                                 ║                          ╎                     ╎                     ╎                                           ╎                     ║
                                 ║                                                                                                                                        ║
                                 ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                               Message Flow                                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   mrcp_client.c << in function mrcp_client_create >>
   ═════════════
      object  ===> mrcp_client_t *client
      member  ---> task->base->vtable->process_msg {adds the virtual function pointer to mrcp_client_msg_process}


   mrcp_unirtsp_client_agent.c << in function mrcp_unirtsp_client_agent_create >>
   ═══════════════════════════
      object  ===> mrcp_unirtsp_agent_t *agent
      member  ---> sig_agent->create_client_session {adds the virtual function pointer to mrcp_unirtsp_session_create}




   mod_unimrcp.c << in function rec_open >>
   ═════════════
      object  ===> switch_rec_handle_t *sh
      member  ---> private_info





   apt_task.c << in function apt_task_msg_process >>
   ══════════
      object  ===> apt_task_t *task
      member  ---> vtable.process_msg {calls the virtual function pointer to mrcp_client_msg_process}

      mrcp_client.c << in function mrcp_client_msg_process >>
      ═════════════
         object   ===> apt_task_msg_t *msg
         member   ---> data {cast to a mrcp_app_message_t *)
         function ---> mrcp_client_app_message_process

         mrcp_client_session.c << in function mrcp_client_app_message_process >>
         ═════════════════════
            object   ===> mrcp_app_message_t *app_message
            member   ---> session {cast to a mrcp_client_session_t *}
            function ---> mrcp_app_request_dispatch

            mrcp_client_session.c << in function mrcp_app_request_dispatch >>
            ═════════════════════
               object   ===> mrcp_client_session_t *session
               member   ---> base->sig_agent->create_client_session {calls the virtual function pointer to mrcp_unirtsp_session_create}

               mrcp_unirtsp_client_agent.c << in function mrcp_unirtsp_session_create >>
               ═══════════════════════════
                  object  ===> mrcp_unirtsp_session_t *session















schannel->application->param_id_map <==== Magic is stored here!!!
cached_rec_handle_t





sync_stream is a send stream






╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                 Code Flow                                                                               ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝







   speech_on_channel_add << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>
   ──┬──────────────────
     ╎
     ╎




   rec_on_message_receive << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c: Called when a 200 OK is received in response to an RTSP ANNOUNCE message >>
   ──┬───────────────────
     ╎
     ╎
     └── rec_channel_setup << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c: Generates an RTSP SETUP message >>




---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--                                                                       FreeSwitch ASR Component                                                                        --
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

main.c << in /libs/unimrcp/platforms/acr-client/src/main.c >>
──┬───
  ╎
  ╎
  └── asr_engine_create << in /libs/unimrcp/platforms/libasr-client/src/asr_engine.c >>
      ──┬──────────────
        ╎
        ╎
        └── unimrcp_client_create << in /libs/unimrcp/platforms/libunimrcp-client/src/unimrcp_client.c >>
            ──┬──────────────────
              ╎
              ╎
              └── unimrcp_client_load << in /libs/unimrcp/platforms/libunimrcp-client/src/unimrcp_client.c >>
                  ──┬────────────────
                    ╎
                    ╎
                    └── unimrcp_client_doc_process << in /libs/unimrcp/platforms/libunimrcp-client/src/unimrcp_client.c >>
                        ──┬───────────────────────
                          ╎
                          ╎

unimrcp_client_profiles_load
unimrcp_client_mrcpv1_profile_load
unimrcp_client_components_load
unimrcp_client_rtsp_uac_load



mrcp_app_sig_event_raise << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>


mrcp_client_on_channel_add << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>





---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--                                                                         Module Load Code Flow                                                                         --
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

mod_unimrcp_load << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>
──┬─────────────
  ╎
  ╎
  ├── mod_unimrcp_do_config << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>
  ╎
  ╎
  ├── mod_unimrcp_client_create << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>
  ╎   ──┬──────────────────────
  ╎     ╎
  ╎     ╎
  ╎     ├── mrcp_client_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client.c >>
  ╎     ╎
  ╎     ╎
  ╎     └── mrcp_unirtsp_client_agent_create << in /libs/unimrcp/modules/mrcp-unirtsp/src/mrcp_unirtsp_client_agent.c >>
  ╎         ──┬─────────────────────────────
  ╎           ╎
  ╎           ╎
  ╎           ├── mrcp_unirtsp_session_create << in /libs/unimrcp/modules/mrcp-unirtsp/src/mrcp_unirtsp_client_agent.c: Added to the virtual table of the agent object >>
  ╎           ╎   ──┬────────────────────────
  ╎           ╎     ╎
  ╎           ╎     ╎
  ╎           ╎     └── rtsp_client_session_create << in /libs/unimrcp/libs/unimrcp-rtsp/src/rtsp_client.c: Added to the virtual table of the session object >>
  ╎           ╎
  ╎           ╎
  ╎           └── rtsp_client_create << in /libs/unimrcp/libs/unimrcp-rtsp/src/rtsp_client.c: Added to the virtual table of the agent object >>
  ╎
  ╎
  ├── rec_load << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c: Performs all the necessary initialization for the recorder module >>
  ╎   ──┬─────
  ╎     ╎
  ╎     ╎
  ╎     ├── globals.record.dispatcher.on_channel_add << Initialized to speech_on_channel_add >>
  ╎     ╎
  ╎     ╎
  ╎     ├── globals.record.dispatcher.on_channel_remove << Initialized to speech_on_channel_remove >>
  ╎     ╎
  ╎     ╎
  ╎     └── globals.record.dispatcher.on_message_receive << Initialized to rec_on_message_receive >>
  ╎
  ╎
  └── mrcp_client_start << in /libs/unimrcp/libs/mrcp-client/src/mcrp_client.c: Starts the thread to process client tasks >>





---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--                                                                       Message Request Code Flow                                                                       --
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

rec_open << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c: Opens the recorder for a transaction >>
──┬─────
  ╎
  ╎
  ├── speech_channel_create << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c: Opens the recorder for a transaction >>
  ╎
  ╎
  ├── speech_channel_open << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>
  ╎   ──┬────────────────
  ╎     ╎
  ╎     ╎
  ╎     ├── mrcp_application_session_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_application.c >>
  ╎     ╎   ──┬────────────────────────────
  ╎     ╎     ╎
  ╎     ╎     ╎
  ╎     ╎     ├── mrcp_client_profile_get << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client.c >>
  ╎     ╎     ╎
  ╎     ╎     ╎
  ╎     ╎     └── mrcp_client_session_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client.c >>
  ╎     ╎         ──┬───────────────────────
  ╎     ╎           ╎
  ╎     ╎           ╎
  ╎     ╎           └── mrcp_session_create << in /libs/unimrcp/libs/mrcp-signaling/src/mrcp_sig_agent.c >>
  ╎     ╎
  ╎     ╎
  ╎     ├── speech_channel_create_mpf_termination << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>
  ╎     ╎   ──┬──────────────────────────────────
  ╎     ╎     ╎
  ╎     ╎     ╎
  ╎     ╎     └── mrcp_application_audio_termination_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_application.c >>
  ╎     ╎         ──┬──────────────────────────────────────
  ╎     ╎           ╎
  ╎     ╎           ╎
  ╎     ╎           ├── mpf_audio_stream_create << in /libs/unimrcp/libs/mpf/src/mpf_stream.c >>
  ╎     ╎           ╎
  ╎     ╎           ╎
  ╎     ╎           └── mpf_raw_termination_create << in /libs/unimrcp/libs/mpf/src/mpf_termination_factory.c >>
  ╎     ╎
  ╎     ╎
  ╎     ├── mrcp_application_channel_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_application.c >>
  ╎     ╎   ──┬────────────────────────────
  ╎     ╎     ╎
  ╎     ╎     ╎
  ╎     ╎     └── mrcp_client_channel_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>
  ╎     ╎
  ╎     ╎
  ╎     ├── mrcp_application_channel_add << in /libs/unimrcp/libs/mrcp-client/src/mrcp_application.c >>
  ╎     ╎   ──┬─────────────────────────
  ╎     ╎     ╎
  ╎     ╎     ╎
  ╎     ╎     └── mrcp_app_signaling_task_msg_signal << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client.c >>
  ╎     ╎         ──┬───────────────────────────────
  ╎     ╎           ╎
  ╎     ╎           ╎
  ╎     ╎           └── mrcp_client_app_signaling_request_create << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>
  ╎     ╎
  ╎     ╎
  ╎     └── switch_thread_cond_timedwait
  ╎
  ╎
  └── speech_channel_set_param << in /src/mod/asr_tts/mod_unimrcp/mod_unimrcp.c >>




---------------------------------------------------------------------------------------------------------------------------------------------------------------------------


mrcp_client_app_message_process << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>
──┬────────────────────────────
  ╎
  ╎
  └── mrcp_app_request_dispatch << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>
      ──┬──────────────────────
        ╎
        ╎
        └── mrcp_client_channel_add << in /libs/unimrcp/libs/mrcp-client/src/mrcp_client_session.c >>
            ──┬────────────────────
              ╎
              ╎
              ├── mrcp_client_session_state_set



















         ╎     └── mrcp_unirtsp_on_session_event << in mrcp_unirtsp_client_agent.c: Processes a request message sent to the API >>
         ╎         ──┬──────────────────────────
         ╎           ╎
         ╎           ╎


         ╎     └── mrcp_unirtsp_on_session_response << in mrcp_unirtsp_client_agent.c: Generates a response to a request >>
         ╎         ──┬─────────────────────────────
         ╎           ╎
         ╎           ╎


Stored in a struct object, that contains function pointers: session_request_vtable
Accessed with the control pointer


         ╎     └── mrcp_unirtsp_session_control << in mrcp_unirtsp_client_agent.c: ONLY place an RTSP ANNOUNCE request is created >>
         ╎         ──┬─────────────────────────
         ╎           ╎
         ╎           ╎
         ╎           └── rtsp_request_create << in rtsp_message.c: >>
         ╎               ──┬────────────────
         ╎                 ╎
         ╎                 ╎
         ╎                 └── rtsp_message_create << in rtsp_message.c: >>
         ╎
         ╎


Adding RTSP Message

1. Add the new method to the rtsp_method_id enumeration in /libs/unimrcp/libs/uni-rtsp/include/rtsp_start_line.h
2. Add the text for the new method to the rtsp_method_string_table in /libs/unimrcp/libs/uni-rtsp/src/rtsp_start_line.c
3. Add a new function prototype for the new RTSP Method in /libs/unimrcp/modules/mrcp-unirtsp/include/mrcp_unirtsp_sdp.h
3. Add a new function for the new RTSP Method in /libs/unimrcp/modules/mrcp-unirtsp/src/mrcp_unirtsp_sdp.c



Calling RTSP Messages
1. Add ... in /libs/unimrcp/modules/mrcp-unirtsp/src/mrcp_unirtsp_client_agent.c

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                    Passing FS Channel Variables into the RTSP stack                                                     ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
**

1. To set RTSP values for the CHANNEL_ADD  **aka  the SETUP portion

2. But as I did not have the pairs Nor the Generic headder without the Grammer passing (I gutted that) I used a series of variables passing across objects

	Fs_channel variable -> Save to the Switch_***_handle in the Switch_IVR_async.c (the module interface)
		Ex: ah->CAllingNr = strdup(switch_channel_get_variable(channel, "VarToGet"))

	Switch_***_handle Is the "fsh" of the speech_channel
		Ex: ah->fsh->CallingNr

	mod_unimrcp.c associates the Switch_***_handle to the speech_channel (schannel->unimrcp_session)
		Ex: mrcp_application_session_callingNr_set(schannel->unimrcp_session, ah->callingNr);
		    mrcp_application_session_**_set is located in the mrcp_applicaiton.c

	the mcrp_client_session_t->base happens to be this same mrcp_session_t that contains the variables.
		**its C, there is no base class unless you have a pointer to that object!

	Now the RTSP stack takes a "Descriptor" and not the session... so we need to have a copy of the variables local to the descriptor
		in mrcp_clien_session.c we copy *again* the variables to the local object
		apt_string_assign(&descriptor->callingNr, mrcp_session->callingNr, session->base->pool)

	now I believe we have the local data to create message bodies form the descriptor into a RTSP message.
		Ex: mrcp_unirtsp_sdp.c::rtsp_request_ED137_generate_SET_PARAMETER(descriptor, responce_v_table, pool)


   **To set RTSP variables for the "CONTROL" aka the RECORD/PAUSE
   1. In order to pass arbitrary name/value pairs, you should consider using the header field Vendor-Specific-Parameters

	   Example: tests/mrcptest/src/set_get_suite.c#L181

   2. mod_unimrcp.c::recog_channel_set_params  - Set the mrcp_generic_header
	   On the dialplan read... this will let teh variables from the data portion of the

	   EX:
      <action application="play_and_detect_speech" data="ivr/8000/ivr-yes_we_have_no_bananas.wav detect:unimrcp:harris_recorder {calledNr=${sip_to_user},callingNr=${sip_from_user},connRef=${uuid},setUpTime=${RFC2822_DATE},roleId=${sip_from_display} }builtin:grammarsalloff/boolean?language=en-US;y=1;n=2"/>

   3. Need to get this values to:  mrcp_unirtsp_client_agent.c::mrcp_unirtsp_session_control



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                        Building FreeSwitch Modules                                                                      ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   FreeSwitch Module Library Location
   ══════════════════════════════════
      /usr/lib64/freeswitch/mod



   Build unimrcp Libraries On Build Server
   ═══════════════════════════════════════
      1. Open a terminal window on a build server as a non-root user (important as any ssh keys on the local machine are linked by <user-name>)
      2. Build the lower level library module(s) by typing the following command(s) into the terminal window:

            cd /root/MRussell/FreeSWITCH/NATS_FreeSwitch/freeswitch-1.6.12/libs/unimrcp
            make clean
            make
            make install

      3. Build the module level library module by typing the following command(s) into the terminal window:

            cd /root/MRussell/FreeSWITCH/NATS_FreeSwitch/freeswitch-1.6.12/src/mod/asr_tts/mod_unimrcp
            make



   Copy A Library Module From A Build Server To A Local Machine
   ════════════════════════════════════════════════════════════
      1. Open a terminal window as a non-root user (important as any ssh keys on the local machine are linked by <user-name>)
      2. Copy library module(s) to a local machine by typing the following command(s) into the terminal window:

            scp <user-name>@<server>:/remote-src-directory>/<name-of-the-module>.so <local-dst-directory>
            (ex: scp root@192.168.155.127:/root/MRussell/FreeSWITCH/NATS_FreeSwitch/freeswitch-1.6.12/src/mod/asr_tts/mod_unimrcp/.libs/mod_unimrcp.so /tmp)

scp /data/dataworkspace/freeswitch-1.6.12/src/mod/asr_tts/mod_unimrcp/.libs/mod_unimrcp.so root@10.122.36.135:/usr/lib64/freeswitch/mod

   Copy A Library Module From A Local Machine To A FreeSwitch Server
   ═════════════════════════════════════════════════════════════════
      1. Open a terminal window as a non-root user (important as any ssh keys on the local machine are linked by <user-name>)
      2. Copy library module(s) to a FreeSwitch Server by typing the following command(s) into the terminal window:

            scp <local-src-directory>/<name-of-the-module>.so <user-name>@<server>:/remote-dst-directory>
            (ex: scp /tmp/mod_unimrcp.so root@10.122.36.135:/usr/lib64/freeswitch/mod)



   Copy An RPM Archive From A Build Server To A Local Machine
   ══════════════════════════════════════════════════════════
      1. Open a terminal window as a non-root user (important as any ssh keys on the local machine are linked by <user-name>)
      2. Copy RPM archive(s) to a local machine by typing the following command(s) into the terminal window:

            scp <user-name>@<server>:/remote-src-directory>/<name-of-the-archive>.tar.gz <local-dst-directory>
            (ex: scp root@192.168.155.127:/home/jenkins/jenkins_slave/workspace/development_NATS_freeswitch/build/freeswitch*.tar.gz /tmp)



   Copy An RPM Archive From A Local Machine To A FreeSwitch Server
   ═══════════════════════════════════════════════════════════════
      1. Open a terminal window as a non-root user (important as any ssh keys on the local machine are linked by <user-name>)
      2. Copy RPM archive(s) to a FreeSwitch Server by typing the following command(s) into the terminal window:

            scp <local-src-directory>/<name-of-the-archive>.tar.gz <user-name>@<server>:/remote-dst-directory>
            (ex: scp /tmp/freeswitch*.tar.gz root@10.122.36.135:/tmp/RECORDER/RPM)




╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                   Configuring FreeSwitch Recorder Module                                                                ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Installing FreeSwitch Via RPM
   ═════════════════════════════
      1. Open a terminal window on a FreeSwitch server as a root user
      2. Query the repository manager for the currently installed FreeSwitch components by typing the following command(s) into the terminal window:

            rpm -qa | grep freeswitch

      OPTIONAL: Remove Existing FreeSwitch Components
      ───────────────────────────────────────────────
      3. If the currently installed FreeSwitch components are not required, remove them by typing the following command(s) into the terminal window:

            yum remove freeswitch-\*

      4. Install the desired FreeSwitch components by typing the following command(s) into the terminal window:

            yum localinstall freeswitch-*

      5. Install the FreeSwitch audio components by typing the following command(s) into the terminal window:

            yum --noplugins --enablerepo "vcs21-deps-7-devel" install freeswitch-sound*



   Reconfiguring FreeSwitch For Operation
   ══════════════════════════════════════
      1. Open a terminal window on a FreeSwitch server as a root user
      2. Reconfigure the server to operate on the the necessary AVN by typing the following command(s) into the terminal window:

            /home/zabbix/scripts/cc_reconfig_initiate.bash 0:<domain-name-of-avn>
            (ex: /home/zabbix/scripts/cc_reconfig_initiate.bash 0:ops.vcp.ionharris.com)
            (ex: /home/zabbix/scripts/cc_reconfig_initiate.bash 0:ukn.demo.ionharris.com)



   Configure FreeSwitch Local IP Address
   ═════════════════════════════════════
      1. Open a terminal window on a FreeSwitch server as a root user
      2. Change directory to the FreeSwitch configuration directory by typing the following command(s) into the terminal window:

            cd /etc/freeswitch

      3. In the "vars.xml" file, locate a "X-PRE-PROCESS" tag with a "data" attribute that contains the text "local_ip_v4=".
         Modify the IP address content of the "data" attribute to reflect the IP address of the IP recorder.

            <X-PRE-PROCESS cmd="set" data="local_ip_v4=ip-address-from-recon"/>
            (ex: <X-PRE-PROCESS cmd="set" data="local_ip_v4=10.122.36.135"/>)
            (ex: <X-PRE-PROCESS cmd="set" data="local_ip_v4=10.9.40.22"/>)



   Configure FreeSwitch Standby Mode
   ═════════════════════════════════
      1. Open a terminal window on a FreeSwitch server as a root user
      2. Change directory to the SIP configuration directory by typing the following command(s) into the terminal window:

            cd /etc/freeswitch/sip_profiles

      3. In the "internal.xml" file, locate a "param" tag with a "name" attribute that contains the text "profile-standby".
         Modify the text of the "value" attribute to "false".

            <param name="profile-standby" value="false"/>



   Configure MRCP Profiles
   ═══════════════════════
      1. Open a terminal window on a FreeSwitch server as a root user
      2. Change directory to the MRCP configuration file directory by typing the following command(s) into the terminal window:

            cd /etc/freeswitch/mrcp_profiles

      3. Remove all configuration files except the harris_recorder.xml file
      4. In the "harris_recorder.xml" file, locate a "param" tag with a "name" attribute that contains the text "server-ip".
         Modify the text of the "value" attribute to reflect the IP address of the IP recorder

            (ex: <param name="server-ip" value="10.122.35.20"/> <!-- Jotron Ricochet Recorder OPS AVN -->
            (ex: <param name="server-ip" value="10.122.36.91"/> <!-- VCS21 RTSP Server Simulator OPS AVN -->
            (ex: <param name="server-ip" value="10.9.40.40"/>   <!-- Jotron Ricochet Recorder UKN AVN -->

      5. In the "harris_recorder.xml" file, locate a "param" tag with a "name" attribute that contains the text "recorder".
         Modify the text of the "value" attribute to reflect the rtspurl to send to the IP recorder

            <param name="recorder" value="REC-001-P-GG"/>



   Configure FreeSwitch Conference Channel
   ═══════════════════════════════════════
      1. Open a terminal window on an OpenSIPS Proxy server as a root user
      2. Change directory to the recon directory of the desired AVN by typing the following command(s) into the terminal window:

            /home/zabbix/reconfig/staging/<domain-name-of-avn>
            (ex: cd /home/zabbix/reconfig/staging/ops.vcp.ionharris.com)

      3. In the "ccUsers.xml" file, add the following conference channel node to the "USERS"

            <USER>
               <USERNAME><name-of-conference-channel>@<domain-name-of-avn></USERNAME>
            </USER>
            (ex:
                   <USER>
                      <USERNAME>MEETME999@lin01-sipconf.ops.vcp.ionharris.com</USERNAME>
                   </USER>
            )

      4. Reconfigure the server to add the new conference channel to the necessary AVN by typing the following command(s) into the terminal window:

            /home/zabbix/scripts/cc_reconfig_initiate.bash 0:<domain-name-of-avn>
            (ex: /home/zabbix/scripts/cc_reconfig_initiate.bash 0:ops.vcp.ionharris.com)

      5. Restart the proxy service by typing the following command(s) into the terminal window:

            systemctl restart opensips

      4. Verify that the conference server has created the new channel by typing the following command(s) into the terminal window and inspecting the output.
         The newly created conference channel should be shown

            opensipsctl ul show | grep MEETME



   ALTERNATE: Configure FreeSwitch Conference Channel
   ══════════════════════════════════════════════════
      1. Open a terminal window on an OpenSIPS Proxy server as a root user
      2. Verify that the desired conference channel is NOT already in the OpenSIPS database by typing the following command(s) into the terminal window
         and inspecting the output:

            psql -U postgres -d opensips -c "select * from subscriber;" | less

      3. Provided the desired conference channel is NOT already in the OpenSIPS database, add the conference channel to the "dialplan" table by typing the
         following command(s) into the terminal window:

            psql -U postgres -d opensips -c "INSERT INTO subscriber (username,domain,password,ha1,ha1b) \
                                                SELECT 'MEETME999', 'lin01-sipconf.ops.vcp.ionharris.com', 'password', \
                                                       md5('MEETME999:lin01-sipconf.ops.vcp.ionharris.com:password'), \
                                                       md5('MEETME999@lin01-sipconf.ops.vcp.ionharris.com:lin01-sipconf.ops.vcp.ionharris.com:password') \
                                                WHERE NOT EXISTS (SELECT 1 FROM subscriber WHERE username='MEETME999' AND domain='lin01-sipconf.ops.vcp.ionharris.com');"

            psql -U postgres -d opensips -c "INSERT INTO subscriber (username,domain,password,ha1,ha1b) \
                                                SELECT 'MEETME999', 'lin01-sipconf.ukn.demo.ionharris.com', 'password', \
                                                       md5('MEETME999:lin01-sipconf.ukn.demo.ionharris.com:password'), \
                                                       md5('MEETME999@lin01-sipconf.ukn.demo.ionharris.com:lin01-sipconf.ukn.demo.ionharris.com:password') \
                                                WHERE NOT EXISTS (SELECT 1 FROM subscriber WHERE username='MEETME999' AND domain='lin01-sipconf.ukn.demo.ionharris.com');"






   Additional FreeSwitch Debugging Steps
   ═════════════════════════════════════
      1. Open a terminal window on a FreeSwitch server as a root user
      2. Verify that FreeSwitch is currently running by typing the following command(s) into the terminal window:

            systemctl status freeswitch

      3. Increase the logging level of the console by typing the following command(s) into the terminal window:

            fs_cli -x "fsctl loglevel 9"

      4. Enter the FreeSwitch command line console by typing the following command(s) into the terminal window:

            fs_cli

      5. Load the "unimrcp" module into FreeSwtich by typing the following command(s) into the FreeSwitch command line console in the terminal window:

            load mod_unimrcp

      6. Force FreeSwitch to reload the internal SIP profile and attempt to register to the conference by typing the following command(s)
         into the FreeSwitch command line console in the terminal window:

            sofia profile internal restart

      7. Capture all packets to/from an endpoint device by typing the following command(s) into the terminal window:

            ssh <user-name>@<device> "tcpdump -Uvv -s 0 -A -i eth0 not port 22 -w -" | wireshark -k -s 262144 -i -
            (ex: ssh root@10.122.72.45 "tcpdump -Uvv -s 0 -A -i eth0 not port 22 -w -" | wireshark -k -s 262144 -i -)

      8. Capture all packets to/from an OpenSIPS server by typing the following command(s) into the terminal window:

            ssh <user-name>@<server> "tcpdump -Uvv -s 0 -A -i eth0 not port 22 -w -" | wireshark -k -s 262144 -i -
            (ex: ssh root@10.122.35.4 "tcpdump -Uvv -s 0 -A -i eth0 not port 22 -w -" | wireshark -k -s 262144 -i -)

      9. Capture all packets to/from a FreeSwitch server by typing the following command(s) into the terminal window:

            ssh <user-name>@<server> "tcpdump -Uvv -s 0 -A -i eth0 not port 22 -w -" | wireshark -k -s 262144 -i -
            (ex: ssh root@10.122.36.135 "tcpdump -Uvv -s 0 -A -i eth0 not port 22 -w -" | wireshark -k -s 262144 -i -)

fs_cli -x "uuid_dump 72d6f9478e47584c0726438e" > joe.txt








   Additional OpenSIPS Debugging Steps
   ═══════════════════════════════════
      1. Open a terminal window on a OpenSIPS server as a root user
      2. Display the current shared memory statistics by typing the following command(s) into the terminal window:

            opensipsctl fifo get_statistics all | grep shmem

                            -- or --

            opensipsctl fifo get_statistics shmem:



   Additional Configuration Steps
   ══════════════════════════════
      1. Open a terminal window on a cwp as a root user
      3. In the "db/primary/role_t005.xml" file, add the following conference channel DA button to the "Scene[@name='GGMainPanel1']/Buttons" node

            <Button name="GGMainPanel1-4,1" type="MM" uri="MEETME999@lin01-sipconf.ops.vcp.ionharris.com" style="da_button-darkgray" latching="true" override="false" buttonOrder="-1" iacode="0800">
               <Labels>
                  <Label line="1">MeetMe</Label>
                  <Label line="2">999</Label>
                  <Label line="3">RTSP TST</Label>
                  <Label line="4">NO USE</Label>
               </Labels>
               <Location row="4" column="1" />
               <CallIdentity GGCallerId="" />
            </Button>



        <Button name="GGMainPanel1-0,1" type="MM" uri="MEETME999@lin01-sipconf.ukn.demo.ionharris.com" style="da_button-darkgray" latching="true" override="false" buttonOrder="-1" iacode="0800">
          <Labels>
            <Label line="1">MeetMe</Label>
            <Label line="2">999</Label>
            <Label line="3">RTSP TST</Label>
            <Label line="4">NO USE</Label>
          </Labels>
          <Location row="0" column="1" />
          <CallIdentity GGCallerId="" />
        </Button>
