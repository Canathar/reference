╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ VectorCAST_Setup.txt                                                                                                                                                    ║
║                                                                                                                                                                         ║
║ Document Encoding           : UTF-8, UNIX Line Terminator                                                                                                               ║
║ Document Best Viewed/Printed: Page{Ledger, Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development/Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.05018.xx (19 Feb 18) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added header, added reference data                                                                                                      ║
║  1.01.08818.xx (29 Mar 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added update step before additional library installation                                                                                ║
║  1.02.26918.xx (26 Sep 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Updated instructions for Docker use                                                                                                     ║
║  1.03.27618.xx (03 Oct 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Updated document instructions from feedback                                                                                             ║
║  1.04.27718.xx (04 Oct 18) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added source code workspace creation instructions                                                                                       ║
║  1.05.28218.xx (09 Oct 18) - Maintenance Update {J. Laccone}                                                                                                            ║
║                                 Clarified instructions based on user feedback                                                                                           ║
║  1.06.07319.xx (14 Mar 19) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional instructions                                                                                                           ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Reference                                                                                ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   The Linux loader                                                                                                                                                      ║
║   ----------------                                                                                                                                                      ║
║      https://grahamwideman.wordpress.com/2009/02/09/the-linux-loader-and-how-it-finds-libraries/                                                                        ║
║                                                                                                                                                                         ║
║   Linux secondary library dependencies                                                                                                                                  ║
║   ------------------------------------                                                                                                                                  ║
║      http://www.kaizou.org/2015/01/linux-libraries/                                                                                                                     ║
║                                                                                                                                                                         ║
║   Linux under-linking library issues                                                                                                                                    ║
║   ----------------------------------                                                                                                                                    ║
║      https://wiki.mageia.org/en/Underlinking_issues_in_packaging                                                                                                        ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                   Notes                                                                                 ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Docker Information                                                                                                                                                    ║
║   ------------------                                                                                                                                                    ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Docker_Info.txt                                                       ║
║                                                                                                                                                                         ║
║   VectorCAST Docker Image Source                                                                                                                                        ║
║   ------------------------------                                                                                                                                        ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/vcast-docker/                                                                   ║
║                                                                                                                                                                         ║
║   VectorCAST Structure                                                                                                                                                  ║
║   --------------------                                                                                                                                                  ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/VectorCAST_Structure.txt                                              ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                      Docker VectorCAST Installation                                                                     ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Prerequisites For Both Local And Remote Installations
   ═════════════════════════════════════════════════════
      1. An account on the VCS21 configuration management repository
      2. Docker installed locally with experimental features enabled (ref: "Docker Information" above)
      3. Docker volume created (volume on the local workstation for local installations, volume on the remote VectorCAST Docker Server for remote installations)
      4. Available VectorCAST licenses (ask management if unsure)


   Additional Prerequisites For Remote Installations
   ═════════════════════════════════════════════════
      1. A Linux user account on the remote VectorCAST Docker Server
      2. A configured desktop environment for the Linux user account on the remote VectorCAST Docker Server
      3. A VNC account on the remote VectorCAST Docker Server
      4. SSH Server on the remote VectorCAST Docker Server
      5. VNC Server on the remote VectorCAST Docker Server
      6. SSH Client on the local workstation
      7. VNC Client on the local workstation


   Local Installation
   ══════════════════
      1. Open a terminal window
      2. Make a directory for the VectorCAST Docker Image Source by typing the following command(s) into the terminal window:

            mkdir <vectorcast-docker-image-source-dir>
            (ex: mkdir ~/vcast-docker)

      3. Checkout the VectorCAST Docker Image Source from source code management by typing the following command(s) into the terminal window:

            svn co <repository-location-of-vectorcast-docker-image-source> <local-destination-dir>
            (ex: svn co https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/vcast-docker ~/vcast-docker)

      4. Build the VectorCAST Docker Image by typing the following command(s) into the terminal window:

            cd <vectorcast-docker-image-source-dir>
            (ex: cd ~/vcast-docker)

            ./build-vcast-docker-image.sh

      5. Verify that the VectorCAST Docker Image build by typing the following command(s) into the terminal window and scanning the resulting output for the
         image (the image name defaults to "vcast-platform"):

            docker images

      6. Create a new container based on the VectorCAST Docker Image by typing the following command(s) into the terminal window:

            cd <vectorcast-docker-image-source-dir>
            (ex: cd ~/vcast-docker)

            ./create_vcast_docker_container.sh -c
            NOTE1: The command above script command uses the default values, to use other values, refer to the script help
            NOTE2: If you are running as root, before creating a new container, enable the X-Server connection between the remote VectorCAST Docker Server and any
                   Docker Containers by typing the following command(s) into the terminal window (terminal window in the remote desktop environment):

                      xhost +


   Remote Installation
   ═══════════════════
      1. Connect to a desktop environment on the remote VectorCAST Docker Server, as a Linux user, using a SSH/VNC client
      2. Follow the "Local Installation" instructions substituting the remote desktop environment for the local desktop environment
         NOTE: Before creating a new container, enable the X-Server connection between the remote VectorCAST Docker Server and any
               Docker Containers by typing the following command(s) into the terminal window (terminal window in the remote desktop environment):

                  su
                  xhost +
                  (IMPORTANT: This will only allow X capability for the duration of this VNC session. This command MUST be run each time the VNCServer is restarted)



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                       Creating A Local Source Code Working Directory: Subversion                                                        ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Create A Repository Workspace/Local Workspace
   ═════════════════════════════════════════════
      1. Create a new container based on the VectorCAST Docker Image
      2. Populate the empty Docker volume with source code from one of the following repositories:

         VCS21 Branch: Create A New Local Embedded Source Code Workspace (Populate Empty Docker Volume)
         ──────────────────────────────────────────────────────────────────────────────────────────────
            1. Populate the empty Docker Volume with the embedded source code from the repository by typing the following command(s) into the containers terminal window:

                  trunk
                  -----
                     svn_make_vcs21_workspace --profile <checkout-type> --workspace <name-for-the-new-local-src-directory> --onbranch <src-branch-in-repo>
                     (ex: svn_make_vcs21_workspace --profile appdev --workspace /home/developer/svn-working-dir --onbranch trunk)

                  dev
                  ---
                     svn_make_vcs21_workspace --profile <checkout-type> --workspace <name-for-the-new-local-src-directory> --onbranch <src-branch-in-repo>
                     (ex: svn_make_vcs21_workspace --profile appdev --workspace /home/developer/svn-working-dir --onbranch /branches/dev/jlaccone/DE19715D)

            2. Create the shared object libraries VectorCAST requires by typing the following command(s) into the containers terminal window:

                  cd /home/developer/svn-working-dir/ccu/base/build
                  ./setup

            3. Build the binaries by typing the following command(s) into the containers terminal window:
               NOTE: This step is optional, but a good practice to ensure that there are no errors present before running VectorCAST

                  cd /home/developer/svn-working-dir/ccu/_build/app
                  make -j <number-of-processors> install/strip
                  (ex: make -j 12 install/strip)


         FreeSwitch branch: Create A New Local Conference Server Source Code Workspace (Populate Empty Docker Volume)
         ────────────────────────────────────────────────────────────────────────────────────────────────────────────
            1. Populate the empty Docker Volume with the conference server source code from the repository by typing the following command(s)
               into the containers terminal window:

               svn co https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Infrastructure/Freeswitch_RPM_Files /home/developer/svn-working-dir
               cd $FS_SRC_BASE
               ./bootstrap.sh -j
               ./configure -C --enable-portable-binary --enable-sctp \
                              --prefix=/usr --localstatedir=/var --sysconfdir=/etc \
                              --with-gnu-ld --with-python --with-erlang --with-openssl \
                              --enable-core-odbc-support --enable-zrtp \
                              --enable-core-pgsql-support \
                              --enable-static-v8 --disable-parallel-build-v8
               make


         OpenSIPS branch: Create A New Local Proxy Server Source Code Workspace (Populate Empty Docker Volume)
         ─────────────────────────────────────────────────────────────────────────────────────────────────────
            1. Populate the empty Docker Volume with the proxy server source code from the repository by typing the following command(s)
               into the containers terminal window:

               svn co https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/trunk/Infrastructure/Opensips_RPM_Files /home/developer/svn-working-dir



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                               Executing                                                                                 ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Executing VectorCAST
   ════════════════════
      1. Create a new container based on the VectorCAST Docker Image
      2. Verify that the svn-working-dir (the docker volume) has been populated with the desired software
      3. Execute VectorCAST by typing one of the following command(s) into the containers terminal window:
         NOTE: Each command listed below will only work for the specific software in the docker volume

            For VCS21 Embedded Software
            ───────────────────────────
               vc

            For FreeSwitch Conference Server Software
            ─────────────────────────────────────────
               vcfs



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                           Project Structure                                                                             ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Linker Options Modification Procedure
   ─────────────────────────────────────
      See the "Linker Options Modification Procedure" sections in the VectorCAST Structure document listed in the reference section



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                        Library Reference Commands                                                                       ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Library Cache Search
   ────────────────────
      1. To determine if there are libraries already installed on your system, execute the following commands

            ldconfig -p | grep libagent
            ldconfig -p | grep libsnmp



   Display Dependencies In A Library
   ─────────────────────────────────
      1. To display the list of dependency libraries for a specific library, execute the following command

            ldd -v <library-name>



   Display Unused Dependencies In A Library
   ────────────────────────────────────────
      1. To display the list of unused dependency libraries for a specific library, execute the following command

            ldd -u -r <library-name>



   Display Under-linking (Direct Case) In A Library
   ────────────────────────────────────────────────
      1. To display direct case under-linking (undefined symbols) in a shared library, execute the following command

            ldd -r <library-name> >/dev/null
