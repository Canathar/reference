╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ HLab_Development.txt                                                                                                                                                    ║
║                                                                                                                                                                         ║
║ Document Encoding           : UTF-8, UNIX Line Terminator                                                                                                               ║
║ Document Best Viewed/Printed: Page{Ledger, Landscape, 0.25in Side Margins}   Font{Monospace Font, Normal, 10pt}                                                         ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                            Revision History                                                                             ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ VV.vv.DOYyy.bb (dd MMM yy) - Initial Creation/Development Update/Maintenance Update                                                                                     ║
║                                                                                                                                                                         ║
║  1.00.30319.xx (30 Oct 19) - Initial Creation {J. Laccone}                                                                                                              ║
║                                 Added sections                                                                                                                          ║
║  1.01.00720.xx (07 Jan 20) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added Docker, database creation sections                                                                                                ║
║  1.02.00820.xx (08 Jan 20) - Development Update {J. Laccone}                                                                                                            ║
║                                 Modified database creation sections                                                                                                     ║
║  1.03.00920.xx (09 Jan 20) - Development Update {J. Laccone}                                                                                                            ║
║                                 Modified Docker/database creation sections                                                                                              ║
║  1.04.01020.xx (10 Jan 20) - Development Update {J. Laccone}                                                                                                            ║
║                                 Added additional Docker/database sections                                                                                               ║
║  1.05.02720.xx (27 Jan 20) - Development Update {J. Laccone}                                                                                                            ║
║                                 Cleanup of procedures, make MySQL persist                                                                                               ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                              Reference                                                                                  ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   PM2 - Advanced Node.js Process Manager                                                                                                                                ║
║   --------------------------------------                                                                                                                                ║
║      http://pm2.keymetrics.io/                                                                                                                                          ║
║                                                                                                                                                                         ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                Notes                                                                                    ║
╠═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                                                                         ║
║   Docker Information                                                                                                                                                    ║
║   ------------------                                                                                                                                                    ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/Docker_Info.txt                                                       ║
║                                                                                                                                                                         ║
║   MySQL Information                                                                                                                                                     ║
║   -----------------                                                                                                                                                     ║
║      https://lnsvr0016.cs.myharris.net/vcs21/vcs21_src/vcs21/irad/branches/dev/jlaccone/reference/MySQL_Info.txt                                                        ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                                                         ║
║                                                                            ===  Docker  ===                                                                             ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                              Docker Common                                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Prerequisites For Installations
   ═══════════════════════════════
      1. An account on the VCS21 configuration management repository
      2. Docker installed with experimental features enabled (ref: "Docker Information" above)
      3. Docker MySQL Image pulled to local Docker engine (docker pull mysql)
      4. Docker Hlab Image pulled to local Docker engine (hlab-platform)



/home/hlab
   hlab-packages
   hlab-webssh
   node_modules
   sql-src


cd /home/hlab
npm init -y
npm install /usr/src/hlab-server-0.0.1.tgz
npm install /usr/src/hlab-client-0.0.1.tgz
cd home/hlab/node_modules/hlab-server
npm install
cd home/hlab/node_modules/hlab-client
npm install

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                           HLab Docker Network                                                                           ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Create New HLab Docker Bridge Network
   ═════════════════════════════════════
      NOTE: The below commands will operate as shown if the user is in the docker group

      1. Open a terminal window
      2. Create a new Docker user defined bridge network by typing the following command(s) into the terminal window:

            docker network create <network-name>
            (ex: docker network create hlab-net)

      3. Verify that the Docker user defined bridge network was created by typing the following command(s) into the terminal window:

            docker network ls



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                         MySQL Docker Container                                                                          ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Create A New MySQL Container With Persistent Storage
   ════════════════════════════════════════════════════
      1. Open a terminal window
      2. Verify that the "Create New HLab Docker Bridge Network" procedure has been completed
      3. Create a new container based on the MySQL Docker Image by typing the following command(s) into the terminal window:

            docker run -d --hostname <container-hostname> \
                          --name <container-name> \
                          --network <user-defined-bridge-network-name> \
                          -e MYSQL_ROOT_PASSWORD="<mysql-root-password>" \
                          -e MYSQL_USER=<mysql-user> \
                          -e MYSQL_PASSWORD="<mysql-user-password>" \
                          -v hlab-sql-volume:/var/opt/mssql \
                          <mysql-docker-image>

            (ex: docker run -d --hostname hlab-sql-srv \
                               --name hlab_mysql_instance \
                               --network hlab-net \
                               -e MYSQL_ROOT_PASSWORD="HL@bP@ssw0rd" \
                               -e MYSQL_USER=jlaccone \
                               -e MYSQL_PASSWORD="HL@bP@ssw0rd" \
                               -v hlab-sql-volume:/var/opt/mssql \
                               mysql:latest)

      3. Start a MySQL command line interface session in the contianer by typing the following command(s) into the terminal window:
         NOTE: When prompted, use the <mysql-root-password> defined above.

            docker exec -it -u root <container-name> mysql -p
            (ex: docker exec -it -u root hlab_mysql_instance mysql --default-character-set=utf8 -p)

      4. Modify the database access method by typing the following command(s) into the MySQL command line session:

            ALTER USER root IDENTIFIED WITH mysql_native_password BY '<mysql-root-password>';
            (ex: ALTER USER root IDENTIFIED WITH mysql_native_password BY 'HL@bP@ssw0rd';)

            \q


   Stop And Remove An Existing MySQL Container
   ═══════════════════════════════════════════
      1. Open a terminal window
      2. Stop and remove an existing container by typing the following command(s) into the terminal window:

         docker container stop <container-name>
         (ex: docker container stop hlab_mysql_instance)

         docker container rm <container-name>
         (ex: docker container rm hlab_mysql_instance)



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                          HLab Docker Container                                                                          ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Create New HLab Docker Container
   ════════════════════════════════
      1. Open a terminal window
      2. Verify that the "Create New HLab Docker Bridge Network" procedure has been completed
      3. Change directory to the directory containing the hlab Docker scripts
      4. Create a new hlab container by typing the following command(s) into the terminal window:

            ./create_hlab_docker_container.sh create-container


   Attach To Existing HLab Docker Container
   ════════════════════════════════════════
      1. Open a terminal window
      2. Verify that the "Create New HLab Docker Container" procedure has been completed
      3. Change directory to the directory containing the hlab Docker scripts
      4. Connect to an existing hlab container by typing the following command(s) into the terminal window:

            ./create_hlab_docker_container.sh attach-container



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                                                         ║
║                                                                           ===  Database  ===                                                                            ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                         Database Command Prompt                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   MySQL Command Line Interface (CLI)
   ══════════════════════════════════
      1. Open a terminal window
      2. Verify that the "Create A New MySQL Container" procedure has been completed
      3. Verify that the "Create New HLab Docker Container" procedure has been completed
      4. Change directory to the SQL file source directory, by typing the following command(s) into the containers terminal window:

            cd /home/hlab/sql-src

      5. Login into the MySQL server command line interface, by typing the following command(s) into the containers terminal window:

            mysql --default-character-set=utf8 -h hlab-sql-srv -u root -p



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                     Command Line: Database Creation                                                                     ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   User Creation
   ═════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Create the hlab local user, by typing the following command(s) into the containers mysql command line:

            create user 'hlab'@'localhost' identified by 'HL@bP@ssw0rd';
            grant all on * . * to 'hlab'@'localhost';
            flush privileges;

      3. Create the hlab remote user, by typing the following command(s) into the containers mysql command line:

            create user 'hlab'@'%' identified by 'HL@bP@ssw0rd';
            grant all privileges on * . * to 'hlab'@'%';
            flush privileges;

      4. Verify the hlab users were created, by typing the following command(s) into the containers mysql command line:

            select host, user from mysql.user;


   Database Creation
   ═════════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Create the hlab database, by typing the following command(s) into the containers mysql command line:

            source create-db.txt

      3. Verify the hlab database was created, by typing the following command(s) into the containers mysql command line:

            show databases;


   Table Creation
   ══════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Verify that the "Database Creation" procedure has been completed
      3. Create the tables for the hlab database, by typing the following command(s) into the containers mysql command line:

            source create-tables.txt

      4. Verify the hlab database tables were created, by typing the following command(s) into the containers mysql command line:

            show tables;


desc users;

show create table users;


╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                    Command Line: Database Population                                                                    ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Table Population: Users
   ═══════════════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Verify that the "Table Creation" procedure has been completed
      3. Populate the users table for the hlab database, by typing the following command(s) into the containers mysql command line:

            source populate-table-users.txt

      4. Verify the hlab database users table was pupulated, by typing the following command(s) into the containers mysql command line:

            select * from users;


   Table Population: Folders
   ═════════════════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Verify that the "Table Creation" procedure has been completed
      3. Verify that the "Table Population: Users" procedure has been completed
      4. Populate the folders table for the hlab database, by typing the following command(s) into the containers mysql command line:

            source populate-table-folders.txt

      5. Verify the hlab database folders table was pupulated, by typing the following command(s) into the containers mysql command line:

            select * from folders;


   Table Population: Assets
   ════════════════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Verify that the "Table Creation" procedure has been completed
      3. Verify that the "Table Population: Users" procedure has been completed
      4. Verify that the "Table Population: Folders" procedure has been completed
      5. Populate the assets table for the hlab database, by typing the following command(s) into the containers mysql command line:

            source populate-table-assets.txt

      6. Verify the hlab database assets table was pupulated, by typing the following command(s) into the containers mysql command line:

            select * from assets;



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                   Command Line: Database Maintenance                                                                    ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   User Deletion
   ═════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Delete the hlab local user, by typing the following command(s) into the containers mysql command line:

            revoke all privileges, grant option from 'hlab'@'localhost';
            drop user 'hlab'@'localhost';

      3. Delete the hlab remote user, by typing the following command(s) into the containers mysql command line:

            revoke all privileges, grant option from 'hlab'@'%';
            drop user 'hlab'@'%';

      4. Verify the hlab users were removed, by typing the following command(s) into the containers mysql command line:

            select host, user from mysql.user;



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                                                                                                                         ║
║                                                                      ===  HLab Application(s)  ===                                                                      ║
║                                                                                                                                                                         ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                                             Node.js Common                                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   Port Monitoring
   ═══════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Verify that the Docker container dual binds IPv6 ports, by typing the following command(s) into the containers terminal window:

            cat /proc/sys/net/ipv6/bindv6only
            (a response of 0 indicates that the server dual binds a specific port to both IPv4 and IPv6)

      3. Display the ports the hlab tool(s) are using by typing the following command(s) into the terminal window:

            netstat -plunt

      4. Verify that the following entries are listed:

            tcp        0      0 0.0.0.0:3000            0.0.0.0:*               LISTEN      <node-pid>/node
            tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      <http-server-pid>/http-server
            tcp        0      0 0.0.0.0:50000           0.0.0.0:*               LISTEN      <hlab-webssh.js-pid>/hlab-webssh.js
            tcp6       0      0 :::4000                 :::*                    LISTEN      <hlab-client.js-pid>/hlab-client.js


   Node.js App Monitoring (When Using Processess Monitor 2 - pm2)
   ══════════════════════════════════════════════════════════════
      1. Verify that the "MySQL Command Line Interface (CLI)" procedure has been completed
      2. Display the hlab node.js apps by typing the following command(s) into the terminal window:

            pm2 list

      3. Verify that the following hlab node.js apps are listed:

            hlab-client
            hlab-dev-basic        (during development)
            hlab-dev-express      (during development)
            hlab-webserver
            hlab-webssh

      3. Display details of a specific hlab node.js app by typing the following command(s) into the terminal window:

            pm2 show <hlab-node-app>
            (ex: pm2 show hlab-client)
            (ex: pm2 show hlab-dev-basic)        (during development)
            (ex: pm2 show hlab-dev-express)      (during development)
            (ex: pm2 show hlab-webserver)
            (ex: pm2 show hlab-webssh)

      4. Display logs of a specific hlab node.js app by typing the following command(s) into the terminal window:

            pm2 logs <hlab-node-app>
            (ex: pm2 logs hlab-client)
            (ex: pm2 logs hlab-dev-basic)        (during development)
            (ex: pm2 logs hlab-dev-express)      (during development)
            (ex: pm2 logs hlab-webserver)
            (ex: pm2 logs hlab-webssh)

      5. Clear the logs of a specific hlab node.js app by typing the following command(s) into the terminal window:

            pm2 flush <hlab-node-app>
            (ex: pm2 flush hlab-client)
            (ex: pm2 flush hlab-dev-basic)       (during development)
            (ex: pm2 flush hlab-dev-express)     (during development)
            (ex: pm2 flush hlab-webserver)
            (ex: pm2 flush hlab-webssh)




   Test Framework
   ══════════════
      sudo npm install -g jasmine
      sudo npm install -g jasmine-node

      jasmine init






npm list --depth 0








╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                               Node.js Application Maintenance: hlab-webssh                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   HLab WebSSH
   ═══════════
      hlab-webssh is installed inside the docker image



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                               Node.js Application Maintenance: hlab-client                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   HLab Client
   ═══════════

      Packaging Commands On Workstation
      ─────────────────────────────────
         1. Open a terminal window
         2. Change directory to the hlab-client application source directory, by typing the following command(s) into the terminal window:

               cd <hlab-client-src-dir>
               (ex: cd /data/dataworkspace/hlab-client)

         3. Remove the existing hlab-client archive file, by typing the following command(s) into the terminal window:

               rm -f hlab-client.tar.gz

         4. Create a new hlab-client archive file, by typing the following command(s) into the terminal window:

               tar -czvf hlab-client.tar.gz *

         5. OPTIONAL: Copy the hlab-client archive file into an existing hlab Docker container, by typing the following command(s) into the terminal window:

               docker cp hlab-client.tar.gz hlab_instance:/usr/src



      HLab Client - Common Setup For Container Procedures
      ───────────────────────────────────────────────────
         1. Open a terminal window
         2. Verify that the "Create A New MySQL Container" procedure has been completed
         3. Verify that the "Create New HLab Docker Container" procedure has been completed
         4. Change directory to the hlab-client application source directory, by typing the following command(s) into the containers terminal window:

               cd /home/hlab/hlab-client


      Installation Commands In Container
      ──────────────────────────────────
         1. Verify that the "HLab Client - Common Setup For Container Procedures" procedure has been completed
         2. Remove the existing hlab-client source files, by typing the following command(s) into the containers terminal window:

               rm -rf *

         3. Expand the new hlab-client archive file, by typing the following command(s) into the containers terminal window:

               tar --no-same-owner -xzvf /usr/src/hlab-client.tar.gz

         4. Install/Update the node.js packages required by hlab-client, by typing the following command(s) into the containers terminal window:

               npm install console-stamp@next
               ncu -u
               npm install


      OPTIONAL: Package Verification Commands In Container
      ────────────────────────────────────────────────────
         1. Verify that the "HLab Client - Common Setup For Container Procedures" procedure has been completed
         2. Audit/Update the node.js packages required by hlab-client, by typing the following command(s) into the containers terminal window:

               npm outdated
               npm update


      Debug Application Execution In Container
      ────────────────────────────────────────
         1. Verify that the "HLab Client - Common Setup For Container Procedures" procedure has been completed
         2. Start the hlab-client application in debug mode, by typing the following command(s) into the containers terminal window:
            NOTE: This procedure is mutually exclusive with the "Production Application Execution In Container" procedure

               For heavy-weight monitoring
               ---------------------------
                  NODE_DEBUG=cluster,net,http,fs,tls,module,timers node hlab-client

               For light-weight monitoring
               ---------------------------
                  NODE_DEBUG=timers node hlab-client



      Production Application Execution In Container
      ─────────────────────────────────────────────
         1. Verify that the "HLab Client - Common Setup For Container Procedures" procedure has been completed
         2. Start the hlab-client application in production mode, by typing the following command(s) into the containers terminal window:
            NOTE: This procedure is mutually exclusive with the "Debug Application Execution In Container" procedure

               pm2 start hlab-client.js

         3. Monitor the hlab-client application, by typing the following command(s) into the containers terminal window:

               pm2 flush hlab-client && pm2 logs hlab-client



╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                               Node.js Application Maintenance: hlab-server                                                              ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

   HLab Server
   ═══════════

      Packaging Commands On Workstation
      ─────────────────────────────────
         1. Open a terminal window
         2. Change directory to the hlab-server application source directory, by typing the following command(s) into the terminal window:

               cd <hlab-server-src-dir>
               (ex: cd /data/dataworkspace/hlab-server)

         3. Remove the existing hlab-server archive file, by typing the following command(s) into the terminal window:

               rm -f hlab-server.tar.gz

rm -f hlab-server-0.0.1.tgz

         4. Create a new hlab-server archive file, by typing the following command(s) into the terminal window:

               tar -czvf hlab-server.tar.gz *

npm pack

         5. OPTIONAL: Copy the hlab-server archive file into an existing hlab Docker container, by typing the following command(s) into the terminal window:

               docker cp hlab-server.tar.gz hlab_instance:/usr/src

docker cp hlab-server-0.0.1.tgz hlab_instance:/usr/src




      HLab Server - Common Setup For Container Procedures
      ───────────────────────────────────────────────────
         1. Open a terminal window
         2. Verify that the "Create A New MySQL Container" procedure has been completed
         3. Verify that the "Create New HLab Docker Container" procedure has been completed
         4. Change directory to the hlab-server application source directory, by typing the following command(s) into the containers terminal window:

               cd /home/hlab/hlab-server


      Installation Commands In Container
      ──────────────────────────────────
         1. Verify that the "HLab Server - Common Setup For Container Procedures" procedure has been completed
         2. Remove the existing hlab-server source files, by typing the following command(s) into the containers terminal window:

               rm -rf *

         3. Expand the new hlab-server archive file, by typing the following command(s) into the containers terminal window:

               tar --no-same-owner -xzvf /usr/src/hlab-server.tar.gz

         4. Install/Update the node.js packages required by hlab-server, by typing the following command(s) into the containers terminal window:

               npm install console-stamp@next
               ncu -u
               npm install


      OPTIONAL: Package Verification Commands In Container
      ────────────────────────────────────────────────────
         1. Verify that the "HLab Server - Common Setup For Container Procedures" procedure has been completed
         2. Audit/Update the node.js packages required by hlab-server, by typing the following command(s) into the containers terminal window:

               npm outdated
               npm update


      Debug Application Execution In Container
      ────────────────────────────────────────
         1. Verify that the "HLab Server - Common Setup For Container Procedures" procedure has been completed
         2. Start the hlab-server application in debug mode, by typing the following command(s) into the containers terminal window:
            NOTE: This procedure is mutually exclusive with the "Production Application Execution In Container" procedure

               For heavy-weight monitoring
               ---------------------------
                  NODE_DEBUG=cluster,net,http,fs,tls,module,timers node hlab-server

               For light-weight monitoring
               ---------------------------
                  NODE_DEBUG=timers node hlab-server


      Production Application Execution In Container
      ─────────────────────────────────────────────
         1. Verify that the "HLab Server - Common Setup For Container Procedures" procedure has been completed
         2. Start the hlab-server application in production mode, by typing the following command(s) into the containers terminal window:
            NOTE: This procedure is mutually exclusive with the "Debug Application Execution In Container" procedure

               pm2 start hlab-server.js

         3. Monitor the hlab-server application, by typing the following command(s) into the containers terminal window:

               pm2 flush hlab-server && pm2 logs hlab-server



















      cd /home/hlab
      tar --no-same-owner -xzvf /usr/src/hlab-server.tar.gz --directory hlab-server

      cd /home/hlab/hlab-server
      #json -I -f config.json -e "this.configDb.production.username='hlab'" && \
      #json -I -f config.json -e "this.configDb.production.password='HL@bP@ssw0rd'" && \
      #json -I -f config.json -e "this.configDb.production.options.host='hlab-sql-srv'" && \
      #json -I -f config.json -c 'this.configDb.production.options.port="3306"'


Tests For hlab-server assetRoutes.js
════════════════════════════════════
curl http://hlab-tst:3000/assets/



Tests For hlab-server folderRoutes.js
═════════════════════════════════════
curl http://hlab-tst:3000/folders/



Tests For hlab-server reservationRoutes.js
══════════════════════════════════════════
curl http://hlab-tst:3000/reservations/



Tests For hlab-server userRoutes.js
═══════════════════════════════════
curl http://hlab-tst:3000/users/
curl http://hlab-tst:3000/users/4
curl http://hlab-tst:3000/users/name/jlaccone@harris.com



Test For hlab-client
════════════════════
http://localhost:4000



Test For hlab-webssh
════════════════════
http://localhost:50000/ssh/host/172.24.79.244





